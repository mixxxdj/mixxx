#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# no thanks dpkg-buildpackage, we will handle our own C++ optimizations
DEB_BUILD_OPTIONS= noopt

# optimize=portable 
# for sse2 CPUs (>= Pentium 4) which is the minimum requiremnt for using Mixxx
# this will set CCFLAGS=-mtune=generic -msse2 -mfpmath=sse
# If you need a pure i386 code which is the Debian standard use 
# optimize=legacy (not recomended) 
# this sets CCFLAGS=-mtune=generic only 
# virtualize=0 switches of keeping build files in the cache folder 
MIXXX_SCONS_FLAGS = optimize=portable virtualize=0

# If ARCH is set to a different architecture when running pbuilder, pbuilder
# will be set to create an environment to build packages for the architecture 
# specified in ARCH. 
ifneq (,$(findstring i386,$(ARCH)))
	MIXXX_SCONS_FLAGS += machine=x86
endif
ifneq (,$(findstring amd64,$(ARCH)))
	MIXXX_SCONS_FLAGS += machine=x86_64
endif

# detect number of processors
NCPUS := $(shell getconf _NPROCESSORS_ONLN 2>/dev/null || echo 1)
ifeq ($(NCPUS),-1)
	NCPUS:=1
endif
ifeq ($(NCPUS),0)
	NCPUS:=1
endif

MIXXX_SCONS_FLAGS += -j$(NCPUS) prefix=/usr install_root=$(CURDIR)/debian/tmp/usr
SCONS = scons

configure: configure-stamp
configure-stamp:
	dh_testdir
	touch configure-stamp


build: build-stamp

build-stamp: configure-stamp
	dh_testdir

	mkdir -p $(CURDIR)/debian/tmp/usr

	# Add here commands to compile the package.
	($(SCONS) $(MIXXX_SCONS_FLAGS))
	docbook-to-man debian/mixxx.sgml > mixxx.1

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	rm -f mixxx.1

	# Add here commands to clean up after the build process.
	($(SCONS) $(MIXXX_SCONS_FLAGS) -c)
	# hand cleaning!
	rm -rf src/.{configure.def,moc,obj,summary.log,ui} src/{mixxx,a.out,Makefile}
	rm -f build/*.pyc
	rm -f .sconsign.dblite
	rm -rf .sconf_temp
	rm -f $(CURDIR)/debian/tmp

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs
	mkdir -p $(CURDIR)/debian/tmp/usr
	mkdir -p $(CURDIR)/debian/tmp/usr/share/applications
	mkdir -p $(CURDIR)/debian/tmp/usr/share/mixxx
	# Add here commands to install the package into debian/mixxx.
	$(SCONS) $(MIXXX_SCONS_FLAGS) install
	#the scons prefix path is in MIXXX_SCONS_FLAGS at the top of this file.
	#(cd src; $(MAKE) install INSTALL_ROOT=$(CURDIR)/debian/tmp DESTDIR=$(CURDIR)/debian/tmp)

	dh_install --sourcedir=$(CURDIR)/debian/tmp

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
	dh_installexamples
#	dh_install
	dh_installmenu
	dh_desktop
#	dh_installdebconf
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman mixxx.1
	dh_link
# We don't want our binaries stripped.
#	dh_strip
	dh_compress -Xpdf
	dh_fixperms
#	dh_perl
#	dh_python
#	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps -- --ignore-missing-info #This command complains about libQtXml.so.4 as of Ubuntu 8.10 (Intrepid), unless I tell it to ignore missing info. I don't understand why - Albert 04/13/2009
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
# .PHONY: build clean binary-indep binary-arch binary install configure
.PHONY: build binary-indep binary-arch binary install configure
