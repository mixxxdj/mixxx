# This is the configuration file for the pre-commit framework, a simple way
# to manage, install and run git hooks to catch common problems early on.
# See https://pre-commit.com/ for details.
#
# If you have Python >= 3.7 and python-pip installed, just run:
#
#     $ pip install --user pre-commit
#     $ git clone https://github.com/your-fork-of/mixxx.git
#     $ cd mixxx
#     $ pre-commit install
#     $ pre-commit install -t pre-push
#
# It will now run relevant hooks automatically on every `git commit` or
# `git push` in the mixxx git repository.
#
# If you have a problems with a particular hook, you can use the `$SKIP`
# environment variable to disable hooks:
#
#     $ SKIP=clang-format,end-of-file-fixer git commit
#
# This can also be used to separate logic changes and autoformatting into
# two subsequent commits.
#
# Using the `$SKIP` var is preferable to using `git commit --no-verify`
# because it won't prevent catching other, unrelated issues.

# _anlz.h/_pdb.h: Header files generated by Kaitai Struct
exclude: ^(lib/|src/test/.*data/).*|res/translations/.*\.ts|src/.*_(anlz|pdb)\.h$
minimum_pre_commit_version: 2.21.0
default_language_version:
  python: python3
  rust: 1.64.0
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: fix-byte-order-marker
        exclude: ^.*(\.cbproj|\.groupproj|\.props|\.sln|\.vcxproj|\.vcxproj.filters|UTF-8-BOM.txt)$
      - id: check-case-conflict
      - id: check-json
      - id: check-merge-conflict
      - id: check-xml
      - id: check-yaml
        exclude: ^\.clang-format$
      - id: end-of-file-fixer
        exclude: ^.*UTF-8-BOM.txt$
      - id: mixed-line-ending
      - id: trailing-whitespace
        exclude: \.(c|cc|cxx|cpp|d.ts|frag|glsl|h|hpp|hxx|ih|ispc|ipp|java|js|m|mm|proto|vert)$
      - id: no-commit-to-branch
        # protect main and any branch that has a semver-like name
        args: [-b, main, -p, '^\d+\.\d+(?:\.\d+)?$']
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.2
    hooks:
      - id: codespell
        args:
          [
            --exclude-file,
            .codespellignorelines,
            --ignore-words,
            .codespellignore,
            --ignore-regex,
            "\\W(?:m_p*(?=[A-Z])|m_(?=\\w)|pp*(?=[A-Z])|k(?=[A-Z])|s_(?=\\w))",
          ]
        exclude: ^(packaging/wix/LICENSE.rtf|src/dialog/dlgabout\.cpp|.*\.(?:pot?|(?<!d\.)ts|wxl|svg))$
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.25.0
    hooks:
      - id: eslint
        args: [--fix, --report-unused-disable-directives]
        files: \.m?[jt]s$
        types: [file]
        stages:
          - commit
          - manual
        additional_dependencies:
          - eslint@^v8.6.0
          - eslint-plugin-jsdoc@^v37.5.0
          - "@typescript-eslint/eslint-plugin"
          - "@typescript-eslint/parser"
  - repo: local
    hooks:
      - id: clang-format
        name: clang-format
        description: "Run clang-format in two passes (reformat, then break long lines)"
        entry: python tools/clang_format.py
        require_serial: true
        stages:
          - commit
          - manual
        language: python
        additional_dependencies:
          - clang-format==14.0.6
        files: \.(c|cc|cxx|cpp|frag|glsl|h|hpp|hxx|ih|ispc|ipp|java|m|mm|proto|vert)$
  - repo: https://github.com/psf/black
    rev: 22.10.0
    hooks:
      - id: black
        files: ^tools/.*$
  - repo: https://github.com/pycqa/flake8
    rev: "5.0.4"
    hooks:
      - id: flake8
        files: ^tools/.*$
        types: [text, python]
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.8.0.4
    hooks:
      - id: shellcheck
  - repo: https://github.com/DavidAnson/markdownlint-cli2
    rev: v0.5.1
    hooks:
      - id: markdownlint-cli2
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.18.3
    hooks:
      - id: check-github-workflows
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v2.7.1
    hooks:
      - id: prettier
        types: [yaml]
  - repo: https://github.com/qarmin/qml_formatter.git
    rev: 0.2.0
    hooks:
      - id: qml_formatter
  - repo: local
    hooks:
      - id: qsscheck
        name: qsscheck
        description: Run qsscheck to detect broken QSS.
        entry: python tools/qsscheck.py
        args: [.]
        pass_filenames: false
        language: python
        additional_dependencies:
          - tinycss==0.4
        types: [text]
        files: ^.*\.qss$
        stages:
          - commit
          - manual
      - id: changelog
        name: changelog
        description: Add missing links to changelog.
        entry: python tools/changelog.py
        language: python
        types: [text]
        files: ^CHANGELOG.md$
      - id: qmllint
        name: qmllint
        entry: qmllint
        pass_filenames: true
        require_serial: true
        language: system
        types: [text]
        files: ^.*\.qml$
      - id: metainfo
        name: metainfo
        description: Update AppStream metainfo releases from CHANGELOG.md.
        entry: python tools/update_metainfo.py
        pass_filenames: false
        language: python
        additional_dependencies:
          - beautifulsoup4==4.11.1
          - lxml==4.9.1
          - Markdown==3.4.1
        types: [text]
        files: ^(CHANGELOG\.md|res/linux/org\.mixxx\.Mixxx\.metainfo.xml)$
