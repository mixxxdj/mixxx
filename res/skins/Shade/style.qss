/* Shade */
#Mixxx {
  background-color: #191919;
  background-repeat:no-repeat;
  background-attachment:fixed;
  background-position:center top;
}

#DeckRowSmall {
  padding: 3px 3px 2px 3px;
}

#DeckSmall {
  padding: 5px 0px;
}

WOverview {
  font-family: "Ubuntu";
}

WBeatSpinBox,
/* For some mysterious reason #DlgAutoDJ QSpinBox
wouldn't style the respective spinbox in Shade (anymore),
that's why we do it in another way here */
#spinBoxTransition {
  font: 13px;
  padding: 0px;
  selection-color: #eee;
  selection-background-color: #060613;
  }
  WBeatSpinBox {
    border: 1px solid #060613;
  }
  #spinBoxTransition {
  /* omitting the border definition miraculously makes the spinbox grow */
  /* 0px border OTOH makes the spinbox shrink disproportionately
    border: 0px; */
    margin: 0px 0px 2px 1px;
  }
WLibrary QPushButton {
  border: 1px solid #99A0A4;
  }

WBeatSpinBox::up-button,
#spinBoxTransition::up-button {
  border-left: 1px solid #060613;
  image: url(skin:/btn/btn_spin_up.png) no-repeat;
}

WBeatSpinBox::down-button,
#spinBoxTransition::down-button {
  border-left: 1px solid #060613;
  image: url(skin:/btn/btn_spin_down.png) no-repeat;
}
WBeatSpinBox::up-button,
WBeatSpinBox::down-button {
  height: 9px;
}

#spinBoxTransition::up-button,
#spinBoxTransition::down-button {
  height: 10px;
}



/* common colors for WEffectSelector, QMenu, QToolTip */
WEffectSelector,
WEffectSelector QAbstractScrollArea,
WEffectSelector::down-arrow,
WEffectSelector::indicator:!checked,
#fadeModeCombobox QAbstractScrollArea,
#fadeModeCombobox::item,
#fadeModeCombobox::indicator:!checked,
QToolTip,
WBeatSpinBox,
WBeatSpinBox QMenu,
#LibraryContainer QMenu,
#LibraryContainer QMenu::item,
#LibraryContainer QMenu QCheckBox,
WCueMenuPopup,
WCueMenuPopup QMenu,
WCueMenuPopup QMenu::item,
WCoverArtMenu,
WCoverArtMenu::item {
  color: #060613;
  background-color: #aab2b7;
  }
  #spinBoxTransition,
  #fadeModeCombobox,
  #fadeModeCombobox::down-arrow {
    color: #060613;
    background-color: #99a0a4;
  }
  #spinBoxTransition {
    height: 20px;
    margin-left: 3px;
  }
WEffectSelector,
WEffectSelector QAbstractScrollArea,
WEffectSelector::down-arrow,
WEffectSelector::indicator:!checked,
#fadeModeCombobox,
#fadeModeCombobox QAbstractScrollArea,
#fadeModeCombobox::down-arrow,
#fadeModeCombobox::indicator:!checked,
WLibrary QPushButton:enabled,
WBeatSpinBox,
#spinBoxTransition {
  font: 13px;
  }
WEffectSelector QAbstractScrollArea,
#fadeModeCombobox QAbstractScrollArea {
  padding: 2px;
  min-width: 160px;
  }
WEffectSelector,
WEffectSelector QAbstractScrollArea,
WEffectSelector::down-arrow,
#fadeModeCombobox QAbstractScrollArea,
#fadeModeCombobox,
#fadeModeCombobox::down-arrow,
#spinBoxTransition,
QToolTip,
WBeatSpinBox QMenu,
#LibraryContainer QMenu,
WCueMenuPopup,
WCueMenuPopup QMenu,
WCoverArtMenu {
  border-width: 1px;
  border-style: solid;
  border-color: #060613;
  }
  WEffectSelector,
  #fadeModeCombobox {
    padding-left: 3px;
    }
    WEffectSelector {
      margin-top: 0px;
      margin-bottom: 0px;
      }
    #fadeModeCombobox {
      margin: 0px 0px 2px 1px;
      height: 20px;
    }
  WEffectSelector::drop-down,
  #fadeModeCombobox::drop-down {
    border: 0px;
    }
    WEffectSelector::drop-down,
    WEffectSelector::down-arrow {
      height: 18px;
    }
    #fadeModeCombobox::drop-down,
    #fadeModeCombobox::down-arrow {
      height: 20px;
    }
    WEffectSelector::down-arrow,
    #fadeModeCombobox::down-arrow {
      border-width: 0px 0px 0px 1px;
      margin: 0px;
      image: url(skin:/btn/btn_spin_down.png) no-repeat;
    }
  WEffectSelector::checked, /* selected item */
  WEffectSelector::indicator, /* checkbox, tick mark */
  WEffectSelector::drop-down,
  WEffectSelector::indicator:!checked,
  WBeatSpinBox QMenu::item,
  #LibraryContainer QMenu::item,
  WCueMenuPopup QMenu::item,
  WCoverArtMenu::item,
  #LibraryContainer QMenu QCheckBox {
    padding: 0px;
    margin: 0px;
    image: none;
    outline: none;
    border: 0px solid transparent;
  }
  WEffectSelector::indicator:checked,
  #fadeModeCombobox::indicator:checked {
    border: 1px solid #191f24;
    /* checkbox container is 28 x 22px;
      use margin + border to create a square checkbox sized like kill buttons */
    margin: 2px 5px 2px 5px;
  }
  /* hovered items */
  WEffectSelector::item:selected,
  #fadeModeCombobox::item:selected,
  WBeatSpinBox QMenu::item:selected,
  #LibraryContainer QMenu::item:selected,
  WCueMenuPopup QMenu::item:selected,
  WCoverArtMenu::item:selected,
  #LibraryContainer QMenu QCheckBox:selected,
  #LibraryContainer QMenu QCheckBox:focus,  /* selected by keyboard */
  #LibraryContainer QMenu QCheckBox:hover /* mouse hover */ {
    background-color: lightgray;
    color: #000;
    /* remove OS focus indicator */
    outline: none;
  }
  /* hover over checked effect */
  WEffectSelector::item:checked:selected,
  #fadeModeCombobox::item:checked:selected {
    background-color: #8699b8;
  }
  /* checked checkbox */
  #LibraryContainer QMenu QCheckBox::indicator:checked,
  /* checkbox in Crate name context menu: "[ ] Auto DJ Track Source"  */
  #LibraryContainer QMenu::indicator:checked,
  WEffectSelector::indicator:checked,
  #fadeModeCombobox::indicator:checked {
    border-color: #1a2025;
    image: url(skin:/btn/btn_lib_checkmark_black.svg);
  }
  WEffectSelector::indicator:checked,
  #fadeModeCombobox::indicator:checked,
  #LibraryContainer QMenu::indicator:checked {
    background-color: #f90562;
  }
  /* unchecked menu checkbox */
  #LibraryContainer QMenu QCheckBox::indicator:enabled:!checked,
  #LibraryContainer QMenu::indicator:!checked {
    border-color: #1a2025;/*
    background-color: #7e868b;
    remove OS focus indicator */
    outline: none;
  }
  /* disabled menu item & checkbox */
  WBeatSpinBox QMenu::item:!enabled,
  #LibraryContainer QMenu::item:!enabled,
  WCueMenuPopup QMenu::item:!enabled,
  WCoverArtMenu::item:!enabled,
  #LibraryContainer QMenu QCheckBox:!enabled {
    color: #666;
  }
  #LibraryContainer QMenu QCheckBox::indicator:!enabled {
    border-color: #666;
  }
  #LibraryContainer QMenu QCheckBox::indicator:!enabled:checked {
    image: url(skin:/btn/btn_lib_checkmark_grey.svg);
  }
  #LibraryContainer QMenu QCheckBox::indicator:indeterminate {
    background-color: #cf0a57;
  }
  #LibraryContainer QMenu QCheckBox::indicator:indeterminate,
  #LibraryContainer QCheckBox::indicator:indeterminate:!enabled {
    image: url(skin:/btn/btn_lib_checkmark_dark_grey.svg);
  }



WBeatSpinBox QMenu::item,
#LibraryContainer QMenu::item,
WCueMenuPopup QMenu::item,
WCoverArtMenu::item {
/* right padding creates a margin to the menu expand arrow,
  left padding should be bigger than menu icon width + menu icon
  margin */
  padding: 4px 13px 4px 24px;
  }
  /* icons in editline menu (searchbox, editable track properties) */
  WBeatSpinBox QMenu::icon,
  #LibraryContainer QMenu::icon,
  WCueMenuPopup QMenu::icon,
  WCoverArtMenu::icon,
  #LibraryContainer QMenu::indicator {
    margin: 0px 4px 0px 4px;
  }
  WBeatSpinBox QMenu::separator,
  #LibraryContainer QMenu::separator,
  WCueMenuPopup QMenu::separator,
  WCoverArtMenu::separator {
    height: 0px;
    border-top: 1px solid #71777a;
    margin: 4px 0px;
  }
  #LibraryContainer QMenu QCheckBox,
  WCoverArtMenu QCheckBox {
    padding: 2px 10px 2px 3px;
  }
  #LibraryContainer QMenu QCheckBox::indicator,
  #LibraryContainer QMenu::indicator {
    width: 13px;
    height: 13px;
    border-width: 1px;
    border-style: solid;
  }
  #LibraryContainer QMenu::right-arrow {
    width: 10px;
    height: 10px;
    image: url(skin:/style/menu_arrow.svg);
  }

  #LibraryContainer QHeaderView QMenu::indicator {
    width: 10px;
    height: 10px;
    margin-left: 4px;
    border: none;
    background: none;
    }
    #LibraryContainer QHeaderView QMenu::indicator:checked {
      image: url(skin:/btn/btn_lib_checkmark_black.svg);
      background: none;
    }

#EffectSelectorGroup[highlight="1"] {
  border: 1px solid #52f864;
  margin: 0px 0px 0px 0px;
}
#EffectSelectorGroup[highlight="0"] {
  border: 0px solid #52f864;
  margin: 0px 0px 0px 0px;
}

#EffectUnit {
  qproperty-layoutAlignment:AlignTop;
}
/* common colors for WEffectSelector, QMenu, QToolTip */

/* Cue menu in deck overview */
WCueMenuPopup QLabel {
  color: #060613;
}
#CueDeleteButton {
  /* set any border to allow styles for other properties as well */
  border: 1px solid #060613;
/* To get the final size for the Delete button consider border width.
  tall button, about the same height as cue number + label edit box */
  width: 24px;
  height: 43px;
  padding: 0px;
  background-color: #aab2b7;
  qproperty-icon: url(skin:/btn/btn_delete.svg);
  /* make the icon slightly larger than default 16px */
  qproperty-iconSize: 20px;
  outline: none;
}
#CueLabelEdit {
  border: 1px solid #060613;
  border-radius: 0px;
  background-color: #626F87;
  color: #fff;
  selection-color: #000;
  selection-background-color: #ccc;
  padding: 2px;
}
#CueColorPicker QPushButton,
WLibrary WColorPicker QPushButton {
  width: 38px;
  height: 20px;
  border: 1px solid #060613;
}

/*################################################################
######  Library styling is hard  ################################
################### most of it was LateNight & Deere & Tango ###
############ added styling for AutoDJ & Recording etc ###### */

#LibraryContainer QTableView,
#LibraryContainer QTextBrowser,
#LibraryContainer QTreeView {
  border: 1px solid #585858;
  font-weight: normal;
  color: #9e9e9e;
  background-color: #0f0f0f;
  alternate-background-color: #1a1a1a;
  selection-color: #e6e6e6;
  selection-background-color: #666;
}

#LibraryContainer QTableView::item:selected,
#LibraryContainer QTreeView::item:selected,
#LibraryContainer QTreeView::branch:selected,
#LibraryBPMButton::item:selected {
  border-image: none;
  background-image: none;
  color: #fff;
  background-color: #656d75;
  }

#LibraryContainer QTreeView::item:!selected {
  }

  /* Table cell in edit mode */
  WLibrary QLineEdit,
  #LibraryBPMSpinBox {
    color: #ddd;
    background-color: #0f0f0f;
    selection-color: #000;
    selection-background-color: #ccc;
    border: 1px solid #656d75;
  }

  /* BPM lock icon in the library "BPM" column. */
  #LibraryBPMButton::indicator:checked {
    image: url(skin:/btn/btn_lib_bpm_locked.svg);
    }
    #LibraryBPMButton::indicator:unchecked {
      image: url(skin:/btn/btn_lib_bpm_unlocked.svg);
      }
  #LibraryBPMButton::item {
    color: #cfcfcf;
    }
    /* remove OS focus indicator from BPM cell */
    WLibrary QCheckBox:focus {
      outline: none;
    }

  #LibraryBPMSpinBox {
    border-left: 0px;
    padding: 0px;
    margin: 0px;
    }
    #LibraryBPMSpinBox::up-button,
    #LibraryBPMSpinBox::down-button {
      padding: 0px;
      background-color: #656d75;
      }
      #LibraryBPMSpinBox::up-button {
        image: url(skin:/btn/btn_lib_spinbox_up_white.svg) no-repeat;
        }
      #LibraryBPMSpinBox::down-button {
        image: url(skin:/btn/btn_lib_spinbox_down_white.svg) no-repeat;
        }

  /* Button in library "Preview" column */
  #LibraryPreviewButton {
    background: transparent;
    margin: 0px;
    padding: 0px;
    border: 1px solid transparent;
  }
  #LibraryPreviewButton:!checked{
    image: url(skin:/btn/btn_lib_preview_play.svg);
  }
  #LibraryPreviewButton:!checked:hover {
    border: 1px solid #666;
    background: #0f0f0f;
  }
  #LibraryPreviewButton:checked {
    image: url(skin:/btn/btn_lib_preview_pause.svg);
    background-color: #0f0f0f;
    border: 1px solid #444;
  }
  #LibraryPreviewButton:checked:hover {
    border: 1px solid #666;
  }


  /* checkbox in library "Played" column */
  #LibraryContainer QTableView::indicator {
    width: 10px;
    height: 10px;
    margin: 0px;
    padding: 0px;
    color: #cfcfcf;
    border: 1px solid transparent;
    }
    #LibraryContainer QTableView::indicator:checked {
      image: url(skin:/btn/btn_lib_checkmark.svg) no-repeat center center;
      color: #cfcfcf;
      border: 1px solid #ff6600;
      }
    #LibraryContainer QTableView::indicator:unchecked {
      background: none;
      color: #cfcfcf;
      border: 1px solid rgba(151,151,151,128);
      }

/* library search text box */
WSearchLineEdit {
  margin-top: 2px;
  padding: 2px;
  border: 1px solid #656565;
  background: #0f0f0f;
  color: #cfcfcf;
  }
  WSearchLineEdit:focus {
    padding: 1px;
    border: 2px solid #ff6600;
    color: #eeeeee;
    selection-color: #0f0f0f;
    selection-background-color: #d2d2d2;
  }
  /* Clear button: see /skins/default.qss */


#LibraryContainer QTreeView {
  min-height: 90px;
  min-width: 90px;
  show-decoration-selected: 0;
  /* Don't define top margin here, it won't shift QScrollBar.
  Defined by SearchBox	*/
  margin: 0px;
  }
  #LibraryContainer QTreeView:focus,
  #LibraryContainer QTableView:focus { /*
    New Library navigation COs only work if TreeView or TableView have focus.
    Clicking on buttons, sliders and visuals elsewhere removes focus from Library.
    In conjunction with [Library],MoveFocusBackward/..Forward, this helps a lot. */
    border-color: #ff6600;
  }

/*  Closed branch of tree 	*/
#LibraryContainer QTreeView::branch:has-children:!has-siblings:closed,
#LibraryContainer QTreeView::branch:closed:has-children:has-siblings {
  image: url(skin:/style/style_branch_closed.png);
  }
  #LibraryContainer QTreeView::branch:has-children:!has-siblings:closed:selected,
  #LibraryContainer QTreeView::branch:closed:has-children:has-siblings:selected {
    image: url(skin:/style/style_branch_closed_selected.png);
  }

/*  Open branch of tree 	*/
#LibraryContainer QTreeView::branch:open:has-children:!has-siblings,
#LibraryContainer QTreeView::branch:open:has-children:has-siblings {
  image: url(skin:/style/style_branch_open.png);
  }
  #LibraryContainer QTreeView::branch:open:has-children:!has-siblings:selected,
  #LibraryContainer QTreeView::branch:open:has-children:has-siblings:selected {
    border-image: none;
    image: url(skin:/style/style_branch_open_selected.png);
  }
  /* space left of selected child item */
  #LibraryContainer QTreeView::branch:!has-children:!has-siblings:closed:selected,
  #LibraryContainer QTreeView::branch:closed:!has-children:has-siblings:selected,
  #LibraryContainer QTreeView::branch:open:!has-children:!has-siblings:selected,
  #LibraryContainer QTreeView::branch:open:!has-children:has-siblings:selected {
    border-image: none;
    background-color: #0f0f0f;
  }


#LibraryContainer QHeaderView,
#LibraryContainer QHeaderView::section,
#LibraryContainer QScrollBar:horizontal,
#LibraryContainer QScrollBar:vertical,
WEffectSelector QAbstractScrollArea QScrollBar:horizontal,
WEffectSelector QAbstractScrollArea QScrollBar:vertical,
#fadeModeCombobox QAbstractScrollArea QScrollBar:horizontal,
#fadeModeCombobox QAbstractScrollArea QScrollBar:vertical {
  background-color: #626f87;
}
#LibraryContainer QHeaderView {
  /* Note(ronso0)
  This previously interferred with skin scaling:
  font-size: 13px/13px;
  This doesnt't scale when usinf QT_SCALE_FACTOR manually:
  font-size: 10pt;	*/
  font-size: 13px/13px;
  font-weight: bold;
  color: #000;
  border-radius: 0px;
  border-bottom: 1px solid #0f0f0f;
}
/*	Library header 'buttons'	*/
#LibraryContainer QHeaderView::section {
  padding: 2px 1px 2px 2px;
  /*	set right border so that first column header
  on the left doesn't have double border on the left	*/
  border-right: 1px solid #0f0f0f;
  background-color: #626f87;
  border-radius: 0px;
}

#LibraryContainer QHeaderView::up-arrow,
#LibraryContainer QHeaderView::down-arrow {
  width: 12px;
  padding-right: 2px;
  margin-right: 1px;
  background-color: rgba(98,111,135,255);
  }
  #LibraryContainer QHeaderView::up-arrow {
    image: url(skin:/btn/btn_lib_sort_up_black.png)
  }
  #LibraryContainer QHeaderView::down-arrow {
    image: url(skin:/btn/btn_lib_sort_down_black.png)
  }

/* Scroll bars */
#LibraryContainer QScrollBar:horizontal,
WEffectSelector QAbstractScrollArea QScrollBar:horizontal,
#fadeModeCombobox QAbstractScrollArea QScrollBar:horizontal {
  min-width: 40px;
  height: 18px;
  padding: 0px;
}
#LibraryContainer QScrollBar:vertical,
WEffectSelector QAbstractScrollArea QScrollBar:vertical,
#fadeModeCombobox QAbstractScrollArea QScrollBar:vertical {
  min-height: 40px;
  width: 18px;
  padding: 0px;
}
/* "add-page" and "sub-page" are the gutter of the scrollbar */
#LibraryContainer QScrollBar::add-page,
#LibraryContainer QScrollBar::sub-page,
WEffectSelector QAbstractScrollArea QScrollBar::add-page,
WEffectSelector QAbstractScrollArea QScrollBar::sub-page,
#fadeModeCombobox QAbstractScrollArea QScrollBar::add-page,
#fadeModeCombobox QAbstractScrollArea QScrollBar::sub-page {
  min-width: 14px;
  min-height: 14px;
  background-color: #191919;
}
#LibraryContainer QScrollBar::handle:vertical,
#LibraryContainer QScrollBar::handle:horizontal,
WEffectSelector QAbstractScrollArea QScrollBar::handle:vertical,
WEffectSelector QAbstractScrollArea QScrollBar::handle:horizontal,
#fadeModeCombobox QAbstractScrollArea QScrollBar::handle:vertical,
#fadeModeCombobox QAbstractScrollArea QScrollBar::handle:horizontal {
  background: #626f87;
  border: 1px solid #1e1e1e;
  border-radius: 1px;
}
#LibraryContainer QScrollBar::handle:horizontal,
WEffectSelector QAbstractScrollArea QScrollBar::handle:horizontal,
#fadeModeCombobox QAbstractScrollArea QScrollBar::handle:horizontal {
  min-width: 40px;
}
#LibraryContainer QScrollBar::handle:vertical,
WEffectSelector QAbstractScrollArea QScrollBar::handle:vertical,
#fadeModeCombobox QAbstractScrollArea QScrollBar::handle:vertical {
  min-height: 40px;
}
/* Turn off scroll buttons */
#LibraryContainer QScrollBar::add-line:horizontal,
#LibraryContainer QScrollBar::add-line:vertical,
WEffectSelector QAbstractScrollArea QScrollBar::add-line:horizontal,
WEffectSelector QAbstractScrollArea QScrollBar::add-line:vertical,
#fadeModeCombobox QAbstractScrollArea QScrollBar::add-line:horizontal,
#fadeModeCombobox QAbstractScrollArea QScrollBar::add-line:vertical {
  width: 0px;
  height: 0px;
}
#LibraryContainer QScrollBar::sub-line:horizontal,
#LibraryContainer QScrollBar::sub-line:vertical,
WEffectSelector QAbstractScrollArea QScrollBar::sub-line:horizontal,
WEffectSelector QAbstractScrollArea QScrollBar::sub-line:vertical,
#fadeModeCombobox QAbstractScrollArea QScrollBar::sub-line:horizontal,
#fadeModeCombobox QAbstractScrollArea QScrollBar::sub-line:vertical {
  width: 0px;
  height: 0px;
}

/* Corner in between two scrollbars */
#LibraryContainer QAbstractScrollArea::corner,
WEffectSelector QAbstractScrollArea::corner,
#fadeModeCombobox QAbstractScrollArea::corner {
  background-color: #0f0f0f;
  border-top: 1px solid #585858;
  border-left: 1px solid #585858;
  border-bottom: none;
  border-right: none;
}

/* Styling a QSpinbox is complex and it took ages to figure out how to remove the surrounding frame and make the background transparent without affecting the subcontrols (up/down-buttons).
You could easily style a subcontrol like in the QT-Docs, but if you want to have the OS-native subcontrols, this is the only way i found ( there are probably others ).
In our case make sure that the "frame"-property in the corresponding dlgautodj.ui file is set to "false"
The general rule when it comes to stylesheets is always to remember that if you style part of a widget, then you usually have to style all of it.
*/

/* Cover Art*/
WCoverArt {
  background: transparent;
  color: #ACACAC;
}

/* splitter between treeview and library*/
QSplitter::handle {
  image: url(skin:/style/style_handle_unchecked.png);
  background: none;
}
QSplitter::handle:pressed {
  image: url(skin:/style/style_handle_checked.png);
  background: none;
}
QSplitter::handle:horizontal {
  width: 6px;
}
QSplitter::handle:vertical {
  height: 6px;
}

WLibrary QPushButton {
  font-size: 10px;
  font-family: "Open Sans";
}
/* Extra declaration for QRadionButton otherwise it shows up with wrong colors in Linux with Gnome */
WLibrary QLabel, WLibrary QRadioButton {
  font-size: 13px;
  background: transparent;
  color: #C1C1C1;
}


WLibrary { margin: 2px 3px 0px 0px; }

WLibrary QRadioButton {
  margin: 0px 3px 3px 3px;
  outline: none;
}
/* Center QLabels */
WLibrary QLabel { margin: 0px 3px 3px 0px; }

WLibrary QRadioButton::indicator:checked {
  image: url(skin:/btn/btn_lib_radio_button_on_pink.svg) center center;
}

WLibrary QRadioButton::indicator:unchecked {
  image: url(skin:/btn/btn_lib_radio_button_off.svg) center center;
}

#DlgMissing > QPushButton,
#DlgHidden > QPushButton,
#DlgAutoDJ > QPushButton,
#DlgRecording > QPushButton,
#DlgAnalysis > QPushButton {
  text-align: center;
  font-size: 9pt;
  font-weight: normal;
  /* Note(ronso0)
  Interferes with skin scaling, system font size respectively
  font-size: 14px/14px;
  Setting height/width here will prevent the buttons being scaled properly
  min-height: 22px;
  max-height: 22px;
  height: 22px;	*/
  margin: 1px 2px 3px 1px;
  padding: 1px 3px 0px 3px;
  background-position: center;
  color: #060613;
  background-color: #99a0a4;
  border: 1px solid #99a0a4;
  }
  #DlgAutoDJ > QPushButton {
    padding: 0px;
    width: 32px;
    height: 18px;
    }
    QPushButton#pushButtonAutoDJ {
      width: 40px;
    }

  #DlgMissing > QPushButton:!enabled,
  #DlgHidden > QPushButton:!enabled,
  #DlgAutoDJ > QPushButton:!enabled,
  #DlgRecording > QPushButton:!enabled,
  #DlgAnalysis > QPushButton:!enabled {
    background-color: #72777A;
    border: 1px solid #72777A;
    }
  #DlgMissing > QPushButton:unchecked,
  #DlgHidden > QPushButton:unchecked,
  #DlgAutoDJ > QPushButton:unchecked,
  #DlgRecording > QPushButton:unchecked,
  #DlgAnalysis > QPushButton:unchecked {
    color: #888;
    background-color: #444;
    }
  #DlgMissing > QPushButton:checked,
  #DlgHidden > QPushButton:checked,
  #DlgAutoDJ > QPushButton:checked,
  #DlgRecording > QPushButton:checked,
  #DlgAnalysis > QPushButton:checked {
    color: #000;
    background-color: #F90562;
    border: 1px solid #F90562;
    }
  #DlgAnalysis > QPushButton:focus,
  #DlgMissing > QPushButton:focus,
  #DlgHidden > QPushButton:focus,
  #DlgAutoDJ > QPushButton:focus,
  #DlgRecording > QPushButton:focus,
  #DlgAnalysis > QPushButton:focus {
    outline: none;
  }
  /* Space in between 'Recording'	button and recording label */
  QPushButton#pushButtonRecording {
    margin: 1px 6px 3px 1px;
  }
  /* Push 'Select All' button and away from radio buttons	*/
  QPushButton#pushButtonSelectAll {
    margin: 1px 2px 3px 10px;
  }
/* AutoDJ button icons */
QPushButton#pushButtonAutoDJ {
  image: url(skin:/btn/btn_autodj_enable.svg) no-repeat center center;
}
QPushButton#pushButtonFadeNow:!enabled {
  image: url(skin:/btn/btn_autodj_fade_disabled.svg) no-repeat center center;
  }
  QPushButton#pushButtonFadeNow:enabled {
    image: url(skin:/btn/btn_autodj_fade.svg) no-repeat center center;
  }
QPushButton#pushButtonSkipNext:!enabled {
  image: url(skin:/btn/btn_autodj_skip_disabled.svg) no-repeat center center;
  }
  QPushButton#pushButtonSkipNext:enabled {
    image: url(skin:/btn/btn_autodj_skip.svg) no-repeat center center;
  }
QPushButton#pushButtonShuffle {
  image: url(skin:/btn/btn_autodj_shuffle.svg) no-repeat center center;
}
QPushButton#pushButtonAddRandom {
  image: url(skin:/btn/btn_autodj_addrandom.svg) no-repeat center center;
}
QPushButton#pushButtonRepeatPlaylist {
  image: url(skin:/btn/btn_autodj_repeat_playlist.svg) no-repeat center center;
}
/* AutoDJ button icons */

#HotcueButton {
    background-color: #aab2b7;
}
