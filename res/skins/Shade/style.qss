#Mixxx {
    background-color: #191919;
    background-repeat:no-repeat;
	background-attachment:fixed;
	background-position:center top;  
}

WBeatSpinBox {
	color: #060613;
	background-color: #aab2b7;
	border: 1px solid #060613;
	padding: 0px;
	font: 13px;
}

WBeatSpinBox::up-button{
	height: 9px;
	border-style: solid;
	border-color: #060613;
	border-width: 0px 0px 0px 1px;
	image: url(skin:/btn_spin_up.png) no-repeat;
}

WBeatSpinBox::down-button {
	height: 9px;										
	border-style: solid;
	border-color: #060613;
	border-width: 0px 0px 0px 1px;
	image: url(skin:/btn_spin_down.png) no-repeat;
}

WEffectSelector {
	color: #060613;
	background-color: #aab2b7;
	/* Fixes the white bars on the top/bottom of the popup on Mac OS X */
	margin-top: 0px;
	margin-bottom: 0px;
	border: 1px solid #060613;
	padding-left: 3px;
	font: 13px;
}

WEffectSelector::drop-down {
	/* This causes the Qt theme's widget style to magically not apply. Go figure. */
	border: 0;
}

WEffectSelector::down-arrow {
	height: 20px;
	border-style: solid;
	border-color: #060613;
	border-width: 0px 0px 0px 1px;
	image: url(skin:/btn_spin_down.png) no-repeat;
}

WEffectSelector QAbstractItemView {
	color: #060613;
	background-color: #aab2b7;
	border: 2px solid #060613;
	selection-background-color: lightgray;
}

WEffectSelector::item:selected
{
	background-color: lightgray;
}

WEffectSelector::checked
{
	color: #EC4522;
}

#EffectSelectorGroup[highlight="1"]{ 
	border: 1px solid #52f864;  
	margin: 0px 0px 0px 0px;
} 
#EffectSelectorGroup[highlight="0"]{ 
	border: 0px solid #52f864;  
	margin: 0px 0px 0px 0px;
}

#EffectUnit { 
	qproperty-layoutAlignment:AlignTop;
}



/*################################################################
 ######  Library styling is hard  ###############################
 ################### most of it was LateNight & Deere & Tango ##########
############ added styling for AutoDJ & Recording etc ##### */

QTableView,
QTextBrowser,
QTreeView {
  border: 1px solid #585858;
  font-weight: normal;
  color: #9e9e9e;
  background-color: #0f0f0f;
  alternate-background-color: #1a1a1a;
  selection-color: #e6e6e6;
  selection-background-color: #666;
}

QTreeView {
  min-height: 90px;
  min-width: 90px;
  border-width: 1px 1px 1px 0px;
  border-style: solid;
  border-color: #585858;
  show-decoration-selected: 0;
  /* Don't define top margin here, it won't shift ScrollBar.
  Defined by SearchBox	*/
  margin: 0px;
  }
  QTreeView:focus,
  QTableView:focus { /*
    New Library navigation COs only work if TreeView or TableView have focus.
    Clicking on buttons, sliders and visuals elsewhere removes focus from Library.
    In conjuction with [Library],MoveFocusBackward/..Forward, this helps a lot. */
    border-color: #ff6600;
  }
 QTreeView::item:hover {
     border: 1px solid #eeeeee;
 }

/*  Closed branch of tree 	*/
QTreeView::branch:has-children:!has-siblings:closed,
QTreeView::branch:closed:has-children:has-siblings {
  image: url(skin:/style/style_branch_closed.png);
  }
  QTreeView::branch:has-children:!has-siblings:closed:selected,
  QTreeView::branch:closed:has-children:has-siblings:selected {
    image: url(skin:/style/style_branch_closed.png);
    background-color: #333;
  }

/*  Open branch of tree 	*/
QTreeView::branch:open:has-children:!has-siblings,
QTreeView::branch:open:has-children:has-siblings {
  image: url(skin:/style/style_branch_open.png);
  }
  QTreeView::branch:open:has-children:!has-siblings:selected,
  QTreeView::branch:open:has-children:has-siblings:selected {
    border-image: none;
    image: url(skin:/style/style_branch_open.png);
    background-color: #333;
  }
  /* space left of selected child item */
  QTreeView::branch:!has-children:!has-siblings:closed:selected,
  QTreeView::branch:closed:!has-children:has-siblings:selected,
  QTreeView::branch:open:!has-children:!has-siblings:selected,
  QTreeView::branch:open:!has-children:has-siblings:selected {
    border-image: none;
    background-color: #0f0f0f;
  }

QTreeView::item:selected {
  border-image: none;
  background-image: none;
  background-color: #333;
  color: #d2d2d2;
  }

QTreeView::item:!selected {
  border-image: none;
  background-image: none;
  background-color: #0f0f0f;
  color: #999;
  }

  /* BPM lock icon in the library "BPM" column. */
  #LibraryBPMButton::indicator:checked {
    image: url(:/images/library/ic_library_checked.png);
    }
    #LibraryBPMButton::indicator:unchecked {
      image: url(:/images/library/ic_library_unchecked.png);
      }
  #LibraryBPMButton::item {
    color: #cfcfcf;
    }
    #LibraryBPMButton::item:selected {
      color: #ededed;
      background-color: #666;
      }
	#LibraryBPMButton::item:hover,
	#LibraryBPMButton::item:checked:hover {
	   border: 1px solid #eeeeee;
	}

  #LibraryBPMSpinBox {
    color: #fff;
    selection-color: #0f0f0f;
    background-color: #0f0f0f;
    selection-background-color: #888;
    /* This combination of negative top/bottom padding & margin
      creates a 1px border around the spinbox' text area.
      Increased left/right padding/margin removes the overlap of
      text of activated spinbox and left-over text from regular
      BPM value display. */
    padding: -1px -8px -1px -4px;
    margin: -2px 0px -2px -2px;
    /* As soon as a border is defined, the up/down buttons
      lose their style & icons
    border: 0px;*/
    }

  #LibraryTimesPlayed::item {
    color: #cfcfcf;
    }

  /* Button in library "Preview" column */
  QPushButton#LibraryPreviewButton {
    width: 23px;
    height: 12px;
    background: transparent;
    border: 1px solid transparent;
    margin: 0px;
    padding: 0px;
    }
    QPushButton#LibraryPreviewButton:hover,
    QPushButton#LibraryPreviewButton:checked:hover {
      border: 1px solid #eeeeee;
    }
    QPushButton#LibraryPreviewButton:!checked {
      image: url(:/images/library/ic_library_preview_play.png);

      }
    QPushButton#LibraryPreviewButton:checked {
      image: url(:/images/library/ic_library_preview_pause.png);

      }

  /* checkbox in library "Played" column */
  QTableView::indicator {
    width: 12px;
    height: 12px;
    margin: 0px;
    padding: 0px;
    color: #cfcfcf;
    }
    QTableView::indicator:checked {
      background: transparent url(skin:/style/style_checkbox_checked.png) no-repeat center center;
      color: #cfcfcf;
      }
    QTableView::indicator:unchecked {
      background: transparent url(skin:/style/style_checkbox_unchecked.png) no-repeat center center;
      color: #cfcfcf;
      }
  /* selected table row */
  QTableView::item:selected {
    color: #fff;
    background-color: #666;
  }
	QTableView::indicator:hover,
	QTableView::indicator:checked:hover {
	   border: 1px solid #eeeeee;
	}

/* library search text box */
WSearchLineEdit {
  padding: 2px;
  border: 1px solid #656565;
  border-left: 0px;
  font-size: 10pt;
  font-family: "Open Sans";
  background: #0f0f0f;
  color: #cfcfcf;
  selection-background-color: #d2d2d2;
  selection-color: #0f0f0f;
  margin-bottom: 5px;
  }
  WSearchLineEdit:focus {
    border: 2px solid #ff6600;
    color: #eeeeee;
    padding: 2px;
  }
  /* Clear button next to text field */
  WSearchLineEdit QToolButton {
    margin-bottom: 4px;
  }

QHeaderView { font-size: 10pt; }

/* Styling a QSpinbox is complex and it took ages to figure out how to remove the surrounding frame and make the background transparent without affecting the subcontrols (up/down-buttons).
You could easily style a subcontrol like in the QT-Docs, but if you want to have the OS-native subcontrols, this is the only way i found ( there are probably others ).
In our case make sure that the "frame"-property in the corresponding dlgautodj.ui file is set to "false"
The general rule when it comes to stylesheets is always to remember that if you style part of a widget, then you usually have to style all of it.
*/
/* transition time in Auto DJ tab*/
QSpinBox:editable {
  font-size: 10pt;
  background: transparent;
  color: #ACACAC; }
QSpinBox { min-height: 20px; max-height: 20px;min-width: 40px; max-width: 40px;}

/* Cover Art*/
WCoverArt {
  font: 11px/15px sans-serif;
  font-family: "Open Sans";
  background: transparent;
  color: #ACACAC;
}

/* splitter between treeview and library*/
QSplitter::handle { image: url(skin:/style/style_handle_unchecked.png); background: none; }
QSplitter::handle:pressed { image: url(skin:/style/style_handle_checked.png); background: none; }
QSplitter::handle:horizontal { width: 6px; }
QSplitter::handle:vertical { height: 6px;}

QPushButton { font-size: 10pt;
  font-family: "Open Sans";}
/* Extra declaration for QRadionButton otherwise it shows up with wrong colors in Linux with Gnome */
QLabel, QRadioButton {
  font-size: 10pt;
  background: transparent;
  color: #C1C1C1;}


WLibrary { margin: 2px 3px 0px 0px; }

/* Additional space for QRadionButtons and QLabels*/
WLibrary QRadioButton, WLibrary QLabel { margin: 9px 3px 6px 3px; }

/* Additional space for the first QRadionButton in the row*/
WLibrary QRadioButton#radioButtonRecentlyAdded { margin: 9px 3px 6px 12px; }

/* Additional space for the QPushButtons*/
#DlgMissing > QPushButton,
#DlgHidden > QPushButton,
#DlgAutoDJ > QPushButton,
#DlgRecording > QPushButton,
#DlgAnalysis > QPushButton {
  margin: 9px 3px 6px 3px;
  padding: 3px 8px;
  min-width: 65px;
}


/* Additional space for the first QPushButton in the row*/
#DlgMissing > QPushButton#btnPurge,
#DlgHidden > QPushButton#btnUnhide,
#DlgAutoDJ > QPushButton#pushButtonAutoDJ,
#DlgRecording > QPushButton#pushButtonRecording,
#DlgAnalysis > QPushButton#pushButtonAnalyze { margin: 9px 12px 6px 3px; }


