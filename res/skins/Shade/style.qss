/* Shade */
#Mixxx {
  background-color: #191919;
  background-repeat:no-repeat;
  background-attachment:fixed;
  background-position:center top;
}

#Deck WPushButton {
  font-family: "Open Sans";
  font-size: 14px;
}

#DeckRowSmall {
  padding: 3px 3px 2px 3px;
}

#DeckSmall {
  padding: 5px 0px;
}

WOverview {
	font-family: "Ubuntu";
}

WBeatSpinBox,
/* For some mysterious reason #DlgAutoDJ QSpinBox
wouldn't style the respective spinbox in Shade (anymore),
that's why we do it in another way here */
#spinBoxTransition {
  font: 13px;
  padding: 0px;
}
WBeatSpinBox {
  border: 1px solid #060613;
}
#spinBoxTransition {
/* omitting the border definition miraculously makes the spinbox grow */
/* 0px border OTOH makes the spinbox shrink disproportionately
  border: 0px; */
  margin: 0px 0px 2px 1px;
}
#spinBoxTransition,
WLibrary QPushButton {
  border: 1px solid #99A0A4;
  }
/*
QSpinBox:editable {
  font-size: 13px;
  background: transparent;
  color: #ACACAC; }
QSpinBox { min-height: 20px; max-height: 20px;min-width: 40px; max-width: 40px;}*/

WBeatSpinBox::up-button, 
#spinBoxTransition::up-button {
  height: 9px;
  border-left: 1px solid #060613;
  image: url(skin:/btn/btn_spin_up.png) no-repeat;
}

WBeatSpinBox::down-button,
#spinBoxTransition::down-button {
  height: 9px;
  border-left: 1px solid #060613;
  image: url(skin:/btn/btn_spin_down.png) no-repeat;
}




WEffectSelector QAbstractItemView,
QToolTip,
QMenu {
  padding: 2px;
  font: 13px;
}
WEffectSelector QAbstractItemView {
  min-width: 140px;
}
/* common colors for WEffectSelector, QMenu, QToolTip */
WEffectSelector,
WEffectSelector QAbstractItemView,
WEffectSelector::down-arrow,
WEffectSelector::indicator:!checked,
QToolTip,
QMenu,
QMenu::item,
QMenu QCheckBox,
WBeatSpinBox,
#spinBoxTransition,
WLibrary QPushButton:enabled {
  font: 13px;
  color: #060613;
  background-color: #aab2b7;
  }
WLibrary QPushButton:!enabled {
  font: 13px;}
WEffectSelector,
WEffectSelector QAbstractItemView,
WEffectSelector::down-arrow,
QToolTip,
QMenu {
  border-width: 1px;
  border-style: solid;
  border-color: #060613;
  }
  /* hovered items */
  WEffectSelector::item:selected,
  QMenu::item:selected,
  QMenu QCheckBox:selected,
  QMenu QCheckBox:focus,  /* selected by keyboard */
  QMenu QCheckBox:hover  /* mouse hover */ {
    background-color: lightgray;
    color: #000;
    /* remove OS focus indicator */
    outline: none;
  }
  /* hover over checked effect */
  WEffectSelector::item:checked:selected {
    background-color: #8699b8;
    }
  /* checked effect and menu checkbox */
  WEffectSelector::indicator:checked,
  QMenu QCheckBox::indicator:checked,
  QMenu QCheckBox::indicator:!checked:pressed {
    border-color: #1a2025;
    background-color: #cf0a57;
    image: url(skin:/btn/btn_lib_checkmark_black.svg);
    }
  /* unchecked menu checkbox */
  QMenu QCheckBox::indicator:!checked,
  QMenu QCheckBox::indicator:checked:pressed {
    border-color: #1a2025;
    background-color: #7e868b;
    /* remove OS focus indicator */
    outline: none;
    }
  /* disabled menu checkbox */
  QMenu QCheckBox::indicator:!enabled {
    border-color: #767d82;
    background-color: #7e868b;
    }
  QMenu::item:!enabled,
  QMenu QCheckBox:!enabled {
    color: #666;
    }
/* common colors for WEffectSelector, QMenu, QToolTip */


WEffectSelector {
  /* Fixes the white bars on the top/bottom of the popup on Mac OS X */
  margin-top: 0px;
  margin-bottom: 0px;
  padding-left: 3px;
  }
  WEffectSelector::item {
    height: 22px;
  }
  WEffectSelector::drop-down {
    height: 18px;
    border: 0px;
  }
  WEffectSelector::down-arrow {
    height: 18px;
    border-width: 0px 0px 0px 1px;
    margin: 0px;
    image: url(skin:/btn/btn_spin_down.png) no-repeat;
    }
  WEffectSelector::indicator:checked {
    border-width: 1px;
    border-style: solid;
    /* checkbox container is 28 x 22px;
      use margin + border to create a square checkbox sized like kill buttons */ 
    margin: 3px 5px 2px 5px;
  }
  WEffectSelector::checked /* selected item */,
  WEffectSelector::indicator /* checkbox, tick mark */,
  WEffectSelector::drop-down,
  WEffectSelector::indicator:!checked,
  QMenu::item,
  QMenu QCheckBox {
    padding: 0px;
    margin: 0px;
    image: none;
    outline: none;
    border: 0px solid transparent;
    }


QMenu::item {
  padding: 4px 13px 4px 20px;
  }
  QMenu::separator {
    height: 0px;
    border-top: 1px solid #71777a;
    margin: 4px;
  }
  QMenu QCheckBox {
    padding: 2px 10px 2px 3px;
  }
  QMenu QCheckBox::indicator {
    width: 13px;
    height: 13px;
    border-width: 1px;
    border-style: solid;    
  }
  QMenu::right-arrow {
    width: 10px;
    height: 10px;
    image: url(skin:/style/menu_arrow.svg);
  }

  QHeaderView QMenu::indicator {
    width: 10px;
    height: 10px;
    margin-left: 2px;
    border: none;
    background: none;
    }
    QHeaderView QMenu::indicator:checked {
      image: url(skin:/btn/btn_lib_checkmark_black.svg);
    }




#EffectSelectorGroup[highlight="1"] {
  border: 1px solid #52f864;
  margin: 0px 0px 0px 0px;
}
#EffectSelectorGroup[highlight="0"] {
  border: 0px solid #52f864;
  margin: 0px 0px 0px 0px;
}

#EffectUnit {
  qproperty-layoutAlignment:AlignTop;
}



/*################################################################
######  Library styling is hard  ################################
################### most of it was LateNight & Deere & Tango ###
############ added styling for AutoDJ & Recording etc ###### */

QTableView,
QTextBrowser,
QTreeView {
  border: 1px solid #585858;
  font-weight: normal;
  color: #9e9e9e;
  background-color: #0f0f0f;
  alternate-background-color: #1a1a1a;
  selection-color: #e6e6e6;
  selection-background-color: #666;
}

QTreeView {
  min-height: 90px;
  min-width: 90px;
  border-style: solid;
  border-color: #585858;
  show-decoration-selected: 0;
  /* Don't define top margin here, it won't shift ScrollBar.
  Defined by SearchBox	*/
  margin: 0px;
  }
  QTreeView:focus,
  QTableView:focus { /*
    New Library navigation COs only work if TreeView or TableView have focus.
    Clicking on buttons, sliders and visuals elsewhere removes focus from Library.
    In conjunction with [Library],MoveFocusBackward/..Forward, this helps a lot. */
    border-color: #ff6600;
  }

/*  Closed branch of tree 	*/
QTreeView::branch:has-children:!has-siblings:closed,
QTreeView::branch:closed:has-children:has-siblings {
  image: url(skin:/style/style_branch_closed.png);
  }
  QTreeView::branch:has-children:!has-siblings:closed:selected,
  QTreeView::branch:closed:has-children:has-siblings:selected {
    image: url(skin:/style/style_branch_closed_selected.png);
    background-color: #666;
  }

/*  Open branch of tree 	*/
QTreeView::branch:open:has-children:!has-siblings,
QTreeView::branch:open:has-children:has-siblings {
  image: url(skin:/style/style_branch_open.png);
  }
  QTreeView::branch:open:has-children:!has-siblings:selected,
  QTreeView::branch:open:has-children:has-siblings:selected {
    border-image: none;
    image: url(skin:/style/style_branch_open_selected.png);
    background-color: #666;
  }
  /* space left of selected child item */
  QTreeView::branch:!has-children:!has-siblings:closed:selected,
  QTreeView::branch:closed:!has-children:has-siblings:selected,
  QTreeView::branch:open:!has-children:!has-siblings:selected,
  QTreeView::branch:open:!has-children:has-siblings:selected {
    border-image: none;
    background-color: #0f0f0f;
  }

QTreeView::item:selected,
QTableView::item:selected {
  border-image: none;
  background-image: none;
  color: #fff;
  background-color: #666;
  }

QTreeView::item:!selected {
  border-image: none;
  background-image: none;
  background-color: #0f0f0f;
  color: #999;
  }

  /* BPM lock icon in the library "BPM" column. */
  #LibraryBPMButton::indicator:checked {
    image: url(skin:/btn/btn_lib_bpm_locked.svg);
    }
    #LibraryBPMButton::indicator:unchecked {
      image: url(skin:/btn/btn_lib_bpm_unlocked.svg);
      }
  #LibraryBPMButton::item {
    color: #cfcfcf;
    }
    #LibraryBPMButton::item:selected {
      color: #ededed;
      background-color: #666;
      }

  #LibraryBPMSpinBox {
    color: #fff;
    selection-color: #0f0f0f;
    background-color: #0f0f0f;
    selection-background-color: #888;
    /* This combination of negative top/bottom padding & margin
    creates a 1px border around the spinbox' text area.
    Increased left/right padding/margin removes the overlap of
    text of activated spinbox and left-over text from regular
    BPM value display. */
    padding: -1px -8px -1px -4px;
    margin: -2px 0px -2px -2px;
    /* As soon as any border property is set, the up/down buttons
    lose their style & icons
    border: 0px;
    border-radius: 2px; */
  }

  #LibraryTimesPlayed::item {
    color: #cfcfcf;
    }

  /* Button in library "Preview" column */
  #LibraryPreviewButton {
    background: transparent;
    margin: 0px;
    padding: 0px;
    border: 1px solid transparent;
  }
  #LibraryPreviewButton:!checked{
    image: url(skin:/btn/btn_lib_preview_play.svg);
  }
  #LibraryPreviewButton:!checked:hover {
    border: 1px solid #666;
    background: #0f0f0f;
  }
  #LibraryPreviewButton:checked {
    image: url(skin:/btn/btn_lib_preview_pause.svg);
    background-color: #0f0f0f;
    border: 1px solid #444;
  }
  #LibraryPreviewButton:checked:hover {
    border: 1px solid #666;
  }


  /* checkbox in library "Played" column */
  QTableView::indicator {
    width: 10px;
    height: 10px;
    margin: 0px;
    padding: 0px;
    color: #cfcfcf;
    border: 1px solid transparent;
    }
    QTableView::indicator:checked {
      image: url(skin:/btn/btn_lib_checkmark.svg) no-repeat center center;
      color: #cfcfcf;
      border: 1px solid #ff6600;
      }
    QTableView::indicator:unchecked {
      background: none;
      color: #cfcfcf;
      border: 1px solid rgba(151,151,151,128);
      }

/* library search text box */
WSearchLineEdit {
  padding: 2px;
  margin-top: 2px;
  border: 1px solid #656565;
  font-size: 13px;
  font-family: "Open Sans";
  background: #0f0f0f;
  color: #cfcfcf;
  selection-background-color: #d2d2d2;
  selection-color: #0f0f0f;
  margin-bottom: 5px;
  }
  WSearchLineEdit:focus {
    border: 2px solid #ff6600;
    color: #eeeeee;
    padding: 2px;
  }
  /* Clear button */
  WSearchLineEdit QToolButton {
    /* C++ code adds 3px in each dimension.
       height of search box inside the border: 22px
       make the button use the available height */
    height: 19px;
    width: 19px;
    margin-bottom: 2px;
    }
    WSearchLineEdit QToolButton:!focus {
      image: url(skin:/btn/btn_lib_clear_search.svg);
    }
    WSearchLineEdit QToolButton:focus {
      image: url(skin:/btn/btn_lib_clear_search_focus.svg);
    }

QHeaderView,
QHeaderView::section,
QScrollBar:horizontal,
QScrollBar:vertical {
  background-color: #626f87;
}
QHeaderView {
  /* Note(ronso0)
  This previously interferred with skin scaling:
  font-size: 13px/13px;
  This doesnt't scale when usinf QT_SCALE_FACTOR manually:
  font-size: 10pt;	*/
  font-size: 13px/13px;
  font-weight: bold;
  color: #0f0f0f;
  border-radius: 0px;
  border-bottom: 1px solid #0f0f0f;
}
/*	Library header 'buttons'	*/
QHeaderView::section {
  padding: 2px;
  /*	set right border so that first column header
  on the left doesn't have double border on the left	*/
  border-right: 1px solid #0f0f0f;
  background-color: #626f87;
  border-radius: 0px;
}

QHeaderView::up-arrow,
QHeaderView::down-arrow {
  width: 12px;
  padding-right: 2px;
  margin-right: 1px;
  background-color: rgba(98,111,135,160);
  }
  QHeaderView::up-arrow {
    image: url(skin:/btn/btn_lib_sort_up.png)
  }
  QHeaderView::down-arrow {
    image: url(skin:/btn/btn_lib_sort_down.png)
  }

/* Scroll bars */
QScrollBar:horizontal {
  min-width: 40px;
  height: 18px;
  padding: 0px;
}
QScrollBar:vertical {
  min-height: 40px;
  width: 18px;
  padding: 0px;
}
/* "add-page" and "sub-page" are the gutter of the scrollbar */
QScrollBar::add-page,
QScrollBar::sub-page {
  min-width: 14px;
  min-height: 14px;
  background-color: #191919;
}
QScrollBar::handle:vertical,
QScrollBar::handle:horizontal {
  background: #626f87;
  border: 1px solid #1e1e1e;
  border-radius: 1px;
}
QScrollBar::handle:horizontal {
  min-width: 40px;
}
QScrollBar::handle:vertical {
  min-height: 40px;
}
/* Turn off scroll buttons */
QScrollBar::add-line:horizontal,
QScrollBar::add-line:vertical {
  width: 0px;
  height: 0px;
}
QScrollBar::sub-line:horizontal,
QScrollBar::sub-line:vertical {
  width: 0px;
  height: 0px;
}

/* Corner in between two scrollbars */
QAbstractScrollArea::corner {
  background-color: #0f0f0f;
  border-top: 1px solid #585858;
  border-left: 1px solid #585858;
  border-bottom: none;
  border-right: none;
}

/* Styling a QSpinbox is complex and it took ages to figure out how to remove the surrounding frame and make the background transparent without affecting the subcontrols (up/down-buttons).
You could easily style a subcontrol like in the QT-Docs, but if you want to have the OS-native subcontrols, this is the only way i found ( there are probably others ).
In our case make sure that the "frame"-property in the corresponding dlgautodj.ui file is set to "false"
The general rule when it comes to stylesheets is always to remember that if you style part of a widget, then you usually have to style all of it.
*/
/* transition time in Auto DJ tab*/
QSpinBox:editable,
/* or addressed directly */
#spinBoxTransition {}

/* Cover Art*/
WCoverArt {
  font: 11px/15px sans-serif;
  font-family: "Open Sans";
  background: transparent;
  color: #ACACAC;
}

/* splitter between treeview and library*/
QSplitter::handle { image: url(skin:/style/style_handle_unchecked.png); background: none; }
QSplitter::handle:pressed { image: url(skin:/style/style_handle_checked.png); background: none; }
QSplitter::handle:horizontal { width: 6px; }
QSplitter::handle:vertical { height: 6px;}

QPushButton {
  font-size: 10px;
  font-family: "Open Sans";}
/* Extra declaration for QRadionButton otherwise it shows up with wrong colors in Linux with Gnome */
QLabel, QRadioButton {
  font-size: 13px;
  background: transparent;
  color: #C1C1C1;}


WLibrary { margin: 2px 3px 0px 0px; }

WLibrary QRadioButton {
  margin: 0px 3px 3px 3px;
}
/* Center QLabels */
WLibrary QLabel { margin: 0px 3px 3px 0px; }

WLibrary QRadioButton::indicator:checked {
  image: url(skin:/btn/btn_lib_radio_button_on.svg) center center;
}

WLibrary QRadioButton::indicator:unchecked {
  image: url(skin:/btn/btn_lib_radio_button_off.svg) center center;
}

WLibrary QPushButton {
  text-align: center;
  font-size: 9pt;
  font-weight: normal;
  /* Note(ronso0)
  Interferes with skin scaling, system font size respectively
  font-size: 14px/14px;
  Setting height/width here will prevent the buttons being scaled properly
  min-height: 22px;
  max-height: 22px;
  height: 22px;	*/
  color: #0f0f0f;
  margin: 1px 2px 3px 1px;
  padding: 1px 3px 0px 3px;
  background-position: center;
  border: 1px solid #99A0A4;
  }
  WLibrary QPushButton:!enabled {
    background-color: #72777A;
    border: 1px solid #72777A;
    }
  WLibrary QPushButton:unchecked {
    color: #888;
    background-color: #444;
    }
  WLibrary QPushButton:checked {
    color: #000;
    background-color: #F90562;
    }
  /* Hover highlight for action buttons	*/
  QPushButton#pushButtonAutoDJ:hover,
  QPushButton#pushButtonRecording:hover,
  QPushButton#pushButtonAnalyze:hover {
    border: 1px solid #F90562;
  }
  /* Space in between 'Enable AutoDJ' button and transition time spinbox	*/
  QPushButton#pushButtonAutoDJ {
    margin: 1px 12px 3px 1px;
  }
  /* Space in between 'Recording'	button and recording label */
  QPushButton#pushButtonRecording {
    margin: 1px 6px 3px 1px;
  }
  /* Space in between AutoDJ 'Fade'/'Skip' and 'Shuffle'/'Add Random' */
  QPushButton#pushButtonSkipNext {
    margin: 1px 12px 3px 1px;
  }
  /* Push 'Select All' button and away from radio buttons	*/
  QPushButton#pushButtonSelectAll {
    margin: 1px 2px 3px 10px;
  }

/* Hotcue Color: No Color */
#HotcueButton[highlight="0"] {
    background-color: #fd0564;
}

/* Hotcue Color: Red */
#HotcueButton[highlight="1"] {
    background-color: #c50a08;
}

/* Hotcue Color: Green */
#HotcueButton[highlight="2"] {
    background-color: #32be44;
}

/* Hotcue Color: Blue */
#HotcueButton[highlight="3"] {
    background-color: #0044ff;
}

/* Hotcue Color: Yellow */
#HotcueButton[highlight="4"] {
    background-color: #f8d200;
}

/* Hotcue Color: Celeste */
#HotcueButton[highlight="5"] {
    background-color: #42d4f4;
}

/* Hotcue Color: Purple */
#HotcueButton[highlight="6"] {
    background-color: #af00cc;
}

/* Hotcue Color: Pink */
#HotcueButton[highlight="7"] {
    background-color: #fca6d7;
}

/* Hotcue Color: White */
#HotcueButton[highlight="8"] {
    background-color: #f2f2ff;
}





