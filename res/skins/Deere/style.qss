/*******************************************************************************
 ** BORDER *********************************************************************
 *******************************************************************************/
/* These definitions put a faint grey border around all the widgets. We have to
   be tricky with top/bottom-ness to get things right. */

#Mixer {
  border: 1px solid #555;
}

#DeckTextRow {
  border-top: 1px solid #555;
}

#UpperTextRow {
  /* top 0px seems required for bottom 1px to work O_o */
  border-top: 0px solid #555;
  border-bottom: 1px solid #555;
}

#DeckRows {
  border: 1px solid #555;
  border-top: none;
}

/* Prevent a 2px border where the decks meet. */
#Deck3 #DeckRows, #Deck4 #DeckRows {
  border-top: none;
}

#OverviewRow {
  border-bottom: 1px solid #555;
  background-color: transparent;
  margin: 0px;
}

#VisualRow {
  border-bottom: 1px solid #555;
  background-color: transparent;
  margin: 0px;
}

/* Rounded corners to split things up */

#Deck1, #Deck3 {
  border-bottom-right-radius:5px;
  border-top-right-radius:5px;
  border-width: 1px;
  border-style: solid;
  border-color: #555;
}

#Deck2, #Deck4 {
  border-bottom-left-radius:5px;
  border-top-left-radius:5px;
  border-width: 1px;
  border-style: solid;
  border-color: #555;
}

#Sampler {
  border: 1px solid #555;
  border-left:none;
}

#PreviewDeckContainer {
margin: 0px;
padding: 0px 0px 4px 5px;
border: 1px solid #555;
background: transparent;
}

/*******************************************************************************
 ** END BORDER *****************************************************************
 *******************************************************************************/


/*******************************************************************************
 ** LIBRARY *********************************************************************
 *******************************************************************************/


/* checkbox in library "Played" column */
QTableView::indicator {
  width: 12px;
  height: 12px;
}

QTableView::indicator:checked {
  background: url(skin:/image/style_checkbox_checked.png);
}

QTableView::indicator:unchecked {
  background: url(skin:/image/style_checkbox_unchecked.png);
}

/* BPM lock icon in the library "BPM" column. */
#LibraryBPMButton::indicator:checked {
  image: url(:/images/library/ic_library_checked.png);
}

#LibraryBPMButton::indicator:unchecked {
  image: url(:/images/library/ic_library_unchecked.png);
}

/* Button in library "Preview" column */
QPushButton#LibraryPreviewButton {
  width: 23px;
  height: 12px;
  background: transparent;
  border: none;
}

QPushButton#LibraryPreviewButton:!checked {
  image: url(skin:/image/style_library_preview_play.png);
}

QPushButton#LibraryPreviewButton:checked {
  image: url(skin:/image/style_library_preview_pause.png);
}

/* splitter between treeview and library */
QSplitter::handle {
  image: url(skin:/image/style_handle_unchecked.png);
  background: none;
}

QSplitter::handle:pressed {
  image: url(skin:/image/style_handle_checked.png);
  background: none;
}

QSplitter::handle:horizontal {
  width: 6px;
}

QSplitter::handle:vertical {
  height: 6px;
}

/*******************************************************************************
 ** END LIBRARY *****************************************************************
 *******************************************************************************/

#Mixxx {
  background-color: black;
  font-family: "Open Sans";
}

WWidget, QLabel {
  font-size: 10px;
  text-transform: uppercase;
  font-family: "Open Sans";
}

WSliderComposed {
  background-color: rgba(200, 200, 200, 128);
}

#ControlsRow {
  qproperty-layoutSpacing: 5;
  margin-top: 1px;
  margin-bottom: 1px;
}

/* Make the hotcue button grid have black borders between all buttons */
#HotcueGrid {
  background-color: black;
  qproperty-layoutSpacing: 1;
  padding: 1px;
}

#HotcueGrid WWidgetGroup {
  qproperty-layoutSpacing: 1;
}

#HotcueGrid WPushButton {
}

/* Make the beatloop button grid have black borders between all buttons */
#BeatLoopContainer {
  background-color: black;
  padding: 1px;
  qproperty-layoutSpacing: 1;
}
#BeatLoopContainer WWidgetGroup {
  qproperty-layoutSpacing: 1;
}

#BeatLoopContainer WPushButton {
}

#BeatJumpLoopMoveContainer {
  background-color: black;
  qproperty-layoutSpacing: 1;
  padding: 1px;
}

#BeatJumpLoopMoveContainer WWidgetGroup {
  qproperty-layoutSpacing: 1;
}

#BeatJumpLoopMoveContainer WPushButton {
}

/* Make the transport button grid have black borders between all buttons */
#TransportContainer {
  background-color: black;
  padding: 1px;
  qproperty-layoutSpacing: 1;
}
#TransportContainer WWidgetGroup {
  qproperty-layoutSpacing: 1;
}
#TransportContainer WPushButton {
}

#LoopingContainer {
  background-color: black;
  padding: 1px;
  qproperty-layoutSpacing: 1;
}
#LoopingContainer WWidgetGroup {
  qproperty-layoutSpacing: 1;
}
#LoopingContainer WPushButton {
}

#ToolBar {
  background-color: #111111;
}

/* All widget groups that are children of #DeckRows should AlignTop. */
#DeckRows > WWidgetGroup {
  qproperty-layoutAlignment: 'AlignTop | AlignHCenter';
}

#ArtistGutter, #TitleGutter {
  qproperty-layoutAlignment: 'AlignLeft | AlignTop';
  padding: 2px;
}

#BPMGutter, #PositionGutter {
  qproperty-layoutAlignment: 'AlignRight | AlignTop';
  qproperty-layoutSpacing: 10;
  padding: 2px;
}

#DeckTextRow #ArtistGutter WLabel, #DeckTextRow #BPMGutter WLabel, #DeckTextRow #PositionGutter WLabel {
  font-weight: bold;
  font-size: 15px;
  text-transform: none;
}

#SamplerTextRow #ArtistGutter WLabel, #SamplerTextRow #BPMGutter WLabel, #SamplerTextRow #PositionGutter WLabel {
  font-weight: bold;
  font-size: 11px;
  text-transform: none;
}

#BPMGutter WLabel, #PositionGutter WLabel {
  qproperty-alignment: 'AlignRight | AlignVCenter';
}

#DeckTextRow #TitleGutter WLabel, #EffectRackExpanded #EffectUnitNameContainer WLabel {
  font-weight: bold;
  font-size: 17px;
  text-transform: none;
  text-align: left;
}

#SamplerTextRow #TitleGutter WLabel {
  font-weight: bold;
  font-size: 13px;
  text-transform: none;
  text-align: left;
}

#EffectRackCollapsed #EffectUnitNameContainer WLabel {
  font-weight: bold;
  font-size: 15px;
  text-transform: none;
  text-align: left;
}

#EffectUnitNameRow {
  border-bottom: 1px solid #555;
  background-color: transparent;
  margin: 0px;
}

#EffectUnit1, #EffectUnit2, #EffectUnit3, #EffectUnit4 {
  qproperty-layoutAlignment: 'AlignTop';
  border: 1px solid #555;
  border-left:none;
}

#EffectUnit1 {
  border-left: 1px solid #555;
}

#EffectUnitNameContainer {
  padding: 2px;
  qproperty-layoutAlignment: 'AlignLeft | AlignVCenter';
}

#EffectUnitNextPrevContainer {
  qproperty-layoutAlignment: 'AlignRight | AlignVCenter';
}

#EffectUnitNextPrevContainer WPushButton {
  font-size: 11px;
}

#EffectKnob {
}

#EffectButton {
}

#KnobLabel, #EffectKnobLabel, #EffectButtonLabel {
  background-color: black;
  qproperty-alignment: 'AlignCenter | AlignVCenter';
}

#Mixer {
  qproperty-layoutAlignment: 'AlignTop';
}

#MasterControls {
  qproperty-layoutSpacing: 0;
}

#DeckControls {
  qproperty-layoutSpacing: 0;
}

#MainDeckContainer {
  background-color: black;
}

#LeftGutter, #RightGutter {
  background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                    stop: 0 #333333,
                                    stop: 1.0 #222222);
}

#Deck1, #Deck2 {
  background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                    stop: 0 #333333,
                                    stop: 1.0 #222222);
}

#Deck3, #Deck4 {
  background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                    stop: 0 #222222,
                                    stop: 1.0 #333333);
}

WWidget, WLabel {
  /* All labels should default to a grey that is readable on black. */
  color: #888888;
}

/* Track text, etc. should be in the deck color. */
#Deck1 WLabel {
  color: #0099FF;
}

#DeckMixer1 {
  background-color: #001726;
}

/* Track text, etc. should be in the deck color. */
#Deck2 WLabel {
  color: #E17800;
}

#DeckMixer2 {
  background-color: #261400;
}

#Deck3 WLabel {
  color: violet;
}

#DeckMixer3 {
  background-color: #261526;
}

#Deck4 WLabel {
  color: #CDDC39;
}

#DeckMixer4 {
  background-color: #24260A;
}

#SampleDecksContainer, #PreviewDeckContainer {
  background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                  stop: 0 #222222,
                                  stop: 1.0 #333333);
}

#MicrophonesContainer {
}

#MicrophoneRackExpanded {
  background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                  stop: 0 #222222,
                                  stop: 1.0 #333333);
}

#LibraryContainer {
  background-color: #222;
}

#LibraryExpanded, #LibraryCollapsed {
  qproperty-layoutAlignment: 'AlignLeft | AlignVCenter';
}

#EffectRackContainer {
  background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                  stop: 0 #222222,
                                  stop: 1.0 #333333);
}

#EffectRackExpanded, #EffectRackCollapsed {
  qproperty-layoutAlignment: 'AlignLeft | AlignTop';
}

#EffectUnitParameters {
  padding: 2px;
  qproperty-layoutAlignment: 'AlignLeft | AlignTop';
  qproperty-layoutSpacing: 2;
}

#EffectUnitControls {
  padding: 2px;
  qproperty-layoutAlignment: 'AlignRight | AlignTop';
  qproperty-layoutSpacing: 2;
}

#EffectUnitGroupControls {
  qproperty-layoutAlignment: 'AlignRight | AlignTop';
}

#EffectUnit {
  font-size: 15px;
}

#EffectUnit1 {
}

#EffectUnit2 {
}

#EffectUnit3 {
}

#EffectUnit4 {
}

#SampleDecksContainer {
}

#SampleDecksExpanded, #SampleDecksCollapsed {
  qproperty-layoutAlignment: 'AlignLeft | AlignTop';
}

#OverviewRow, #VisualRow, #ButtonRow {
  /*qproperty-layoutContentsMargins: rect(0 1 0 1);*/
}

WWidgetGroup {
  /*border: 1px solid rgb(128, 128, 128);*/
  /*margin: 0px;
  padding: 0px;
  qproperty-layoutSpacing: 0;
  qproperty-layoutContentsMargins: rect(0 0 0 0);*/
  /*qproperty-layoutAlignment: 'AlignCenter';*/
}

WPushButton
{
    color: #999999;
    background-color: QLinearGradient( x1: 0, y1: 1, x2: 0, y2: 0,
    stop: 0 #484848, stop: 1 #484848);
    border: 1px solid #4A4949;
    border-radius: 1px;
    outline: none;
}

WPushButton:hover
{
    color: #999999;
    background-color: QLinearGradient( x1: 0, y1: 1, x2: 0, y2: 0,
    stop: 0 #5E5D54, stop: 1 #5E5D54);
    border: 0px solid #A4A4A4;
}

/*"Pressed" state*/
WPushButton[value="1"] {
    color: #E5E5E5;
    background-color: QLinearGradient( x1: 0, y1: 1, x2: 0, y2: 0,
    stop: 0 #006BA2, stop: 1 #006BA2);
    border: 0px solid #A4A4A4;
}

WPushButton[value="1"]:hover {
    color: #E5E5E5;
    background-color: QLinearGradient( x1: 0, y1: 1, x2: 0, y2: 0,
    stop: 0 #0085CA, stop: 1 #0085CA);
    border: 0px solid #A4A4A4;
}

/*

#Deck1 {
  margin: 0px;
  qproperty-layoutSpacing: 0;
  qproperty-layoutContentsMargins: rect(10 2 10 2);
  padding-bottom: 10px;
  margin-bottom: 10px;
}

WWidget {
  border: 1px solid rgb(128, 128, 128);
  background-color: grey;
}

WSliderComposed {
  background-color: orange;
}

WVuMeter {
  background-color: pink;
}

WPushButton[value="1"] {
  background-color: green;
}

WPushButton[pressed="true"] {
  background-color: pink;
}

#BeatLoopButton[value="1"][pressed="true"] {
  background-color: pink;
}

#BeatLoopButton[value="0"][pressed="true"] {
  background-color: orange;
}
*/
