/* LateNight 2.3 // Classic theme

* containers
  * colors, borders, background tiles
  * layout spacing

* colors & icons
  * font colors
  * button styles
  * button icons

* library
* menu & special widget styles


/**********************************************************************
************** Colors & borders of GUI containers ********************/
#MainMenu,
#MainMenu::item,
#MainMenu QMenu,
#MainMenu QMenu::item,
#MainMenu QMenu QCheckBox,
#ToolBar,
#WaveformsContainer,
#Deck1, #DeckCompact1, #DeckMini1,
#Deck2, #DeckCompact2, #DeckMini2,
#Deck3, #DeckCompact3, #DeckMini3,
#Deck4, #DeckCompact4, #DeckMini4,
#VuMeterDeck1_Compact,
#VuMeterDeck2_Compact,
#VuMeterDeck3_Compact,
#VuMeterDeck4_Compact,
#VuMeterMaster_Compact,
#FxUnit1, #FxUnit2, #FxUnit3, #FxUnit4,
#FxUnitControlsExpanded, #FxUnitControlsCollapsed,
#FxSlotsExpanded, #FxSlotsCollapsed,
#MixerContainer,
#MicDuckingContainer, #MicAuxUnit, #MicAuxAddFrame,
#Sampler, #SamplerMini,
WEffectSelector::checked, #fadeModeCombobox::checked,
WLibrary,
#SidebarCoverSplitter,
#SidebarBox,
#PreviewDeck,
#LibExpandBox,
#SearchLineBox,
QAbstractScrollArea::corner,
/* Prevent cut-off or shifted stars on macOS */
WStarRating {
  background-color: #1e1e1e;
}

/* borders of elevated containers */
#WaveformsContainer,
#Deck1, #DeckCompact1, #DeckMini1,
#Deck2, #DeckCompact2, #DeckMini2,
#Deck3, #DeckCompact3, #DeckMini3,
#Deck4, #DeckCompact4, #DeckMini4,
#MixerContainer,
#VuMeterDeck1_Compact,
#VuMeterDeck2_Compact,
#VuMeterDeck3_Compact,
#VuMeterDeck4_Compact,
#VuMeterMaster_Compact,
#FxUnit1, #FxUnit2, #FxUnit3, #FxUnit4,
#MicDuckingContainer, #MicAuxUnit, #MicAuxAddFrame,
#Sampler, #SamplerMini,
WLibrary,
#SidebarBox,
#PreviewDeck,
#LibExpandBox,
#LibrarySplitter::handle,
#SearchLineBox {
  border-top: 1px solid #333;
  border-left: 1px solid #333;
  border-bottom: 1px solid #0a0a0a;
  border-right: 1px solid #0a0a0a;
  border-radius: 2px;
  }
  #WaveformsContainer {
    border-width: 1px 0px;
    border-radius: 0px;
  }


#BpmTapContainer:hover {
  background-color: #151517;
  border-radius: 1px;
  }
  #BpmTap[pressed="true"] {
   border: 1px solid #7d350d;
  }

/* borders of embedded regions like deck buttons & Master mixer */
#WaveformBox1,
#WaveformBox2,
#WaveformBox3,
#WaveformBox4,
#DeckRow_5_LoopCuesTransport,
#DeckRow_5_LoopCuesTransportCompact,
#MasterControls, #HeadphoneControls,
#FxParametersBg,
#SamplerHotcues,
WSearchLineEdit,
#OverviewBox, #OverviewBoxMini {
  border-top: 1px solid #0a0a0a;
  border-left: 1px solid #0a0a0a;
  border-bottom: 1px solid #333;
  border-right: 1px solid #333;
  border-bottom-left-radius: 1px;
  border-top-right-radius: 1px;
  background-color: #151515;
  }
  #KeyText {
    border-top: 1px solid #0c0c0c;
    border-bottom: 1px solid #0c0c0c;
  }
  #WaveformBox1,
  #WaveformBox2,
  #WaveformBox3,
  #WaveformBox4 {
    border-radius: 0px;
  }
  /* some get a background image */
  #DeckRow_5_LoopCuesTransport,
  #DeckRow_5_LoopCuesTransportCompact,
  #MasterControls, #HeadphoneControls,
  #FxParametersBg,
  #SamplerHotcues {
    background-image: url(skin:/classic/style/background_tile.png);
  }

#FxParametersFocusBg {
  border: 1px solid #d08e00;
  background-color: rgba(0,0,0,50);
}

#OverviewBox[highlight="1"],
#OverviewBoxMini[highlight="1"] {
  background-color: #080808;
}

/* Some tweaks to create a frameless library table */
#LibrarySplitter {
  border-width: 0px;
  }
  #LibrarySplitter::handle {
    border-width: 1px 0px 0px 0px;
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
    border-bottom-left-radius: 0px;
  }
  #PreviewDeckRightSpacer,
  #SearchTreeSpacer {
    border-right: 1px solid #333;
    background-color: transparent;
    }
    #PreviewDeckRightSpacer {
      min-width: 4px;
      max-width: 4px;
    }
    #SearchTreeSpacer {
      min-height: 3px;
      max-height: 3px;
    }

/* background of fillers */
#FxRackFillerL,
#FxRackFillerR,
#SamplerExpandBox,
#MicAuxRackFiller {
  border-top: 1px solid #222;
  border-left: 1px solid #222;
  border-bottom: 1px solid #111;
  border-right: 1px solid #111;
  border-radius: 2px;
  background-color: #171717;
  }

#VuMeterBox,
#VuMeterBoxMaster,
#VuMeterBoxMasterSingle,
#LatencyMeterBox {
  background-color: #040404;
}

#VuMasterCover {
  background-color: rgba(21, 21, 21, 150);
}

#SkinSettings {
  padding: 3px;
  border-top: 1px solid #585858;
  border-bottom: 1px solid #585858;
  border-left: 1px solid #585858;
  border-top-left-radius: 2px;
  border-bottom-left-radius: 2px;
}

#SubmenuCover {
  background-color: rgba(15, 15, 15, 180);
}
#SkinSettingsMixerToggle {
  background-color: rgba(15, 15, 15, 255);
}

/**** ToolBar *******************************/
#ToolBar, #ToolBarSection {
  qproperty-layoutSpacing: 2;
}
#ToolBar {
  padding: 0px 2px 0px 2px;
  }
  #ToolBarSeparator {}
  #BatteryBox {
    margin-bottom: 1px;
  }
  #ClockWidget {
    margin-bottom: 2px;
  }
  #LatencyLabel {
    margin-top: 1px;
  }

#DeckRateSeparator,
#DeckRateSeparatorCompact,
#MasterMixerSeparator,
#SkinSettingsSeparator {
  /* needs a background color to paint the borders */
  background-color: transparent;
  }
  #DeckRateSeparator,
  #DeckRateSeparatorCompact,
  #MasterMixerSeparator {
    min-width: 0px;
    max-width: 0px;
  }
  #SkinSettingsSeparator {
    min-height: 0px;
    max-height: 0px;
  }

  #FxFlowIndicatorCollapsed,
  #FxMixerSeparatorCollapsed {
    min-width: 1px;
    max-width: 1px;
    margin: 2px 1px;
    image: url(skin:/classic/style/fx_separator.svg) no-repeat center center;
  }
  #FxSlotSeparatorH {
    min-height: 2px;
    max-height: 2px;
  }
  #SkinSettingsSeparator {
    margin: 3px 4px 7px 4px;
  }

WBeatSpinBox,
#spinBoxTransition  {
  selection-color: #000;
  selection-background-color: #d2d2d2;
  }
  WBeatSpinBox:focus  {
    selection-color: #000;
    selection-background-color: #d2d2d2;
  }
  WBeatSpinBox:focus,
  #spinBoxTransition:focus {
    background-color: #000;
  }


WLibrary {
  border-top-left-radius: 0px;
  }
  #SearchLineBox {
  padding-right: 2px;
  border-right: 0px;
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
  }

#LibExpandBox {
  border-width: 1px 0px 1px 0px;
  border-radius: 0px;
  padding: 0px 0px 2px 2px;
}

#SidebarBox {
  border-right: 0px;
  border-top-right-radius: 0px;
}


/************ separator lines & borders within containers ***********/
#DeckRows2345,
#DeckRows234, #TitleRow,
#DeckRow_2_3_ArtistTitleTime,
#DeckRow_5_Compact,
#DeckSettingsContainer, #DeckSettingsContainerCompact,
#DeckRateSeparator,
#DeckRateSeparatorCompact,
#ExpandingBottomBorder,
#PreviewPlayBox,
#SamplerTitle, #SamplerPlay, #SamplerSettings,
#SamplerGain, #SamplerVU, #SamplerPfl {
  border-style: solid;
  border-color: #0c0c0c;
}

/**********************************************************************
************** Colors & borders of GUI containers ********************/




/******************* Container layouts, margins etc. ******************
**********************************************************************/

#ToolbarDeckSpacer {
  min-height: 4px;
  max-height: 4px;
}

#MiniDecksTopSpacer {
  min-height: 4px;
  max-height: 4px;
}

#CompactDecksCenterSpacer {
  min-width: 4px;
  max-width: 4px;
}

#DeckRateSpacer {
  min-width: 2px;
  max-width: 2px;
}

#Deck1, #DeckCompact1, #DeckMini1,
#Deck2, #DeckCompact2, #DeckMini2,
#Deck3, #DeckCompact3, #DeckMini3,
#Deck4, #DeckCompact4, #DeckMini4,
#MixerContainer,
#VuMeterDeck1_Compact,
#VuMeterDeck2_Compact,
#VuMeterDeck3_Compact,
#VuMeterDeck4_Compact,
#VuMeterMaster_Compact,
#FxUnit1, #FxUnit3,
#FxUnit2, #FxUnit4,
#FxRackFillerR,
#FxRackFillerL,
#MicAuxRack,
#SamplerRow,
#PreviewDeck {
  margin-bottom: 4px;
}

#Deck1, #DeckMini1,
#Deck3, #DeckMini3,
#MixerContainer,
#FxUnit1,
#FxUnit3,
#FxRackFillerL,
#FxRackFillerR,
#MicRack, #AuxRack {
  margin-right: 2px;
}

#Deck2, #DeckMini2,
#Deck4, #DeckMini4,
#MixerContainer,
#FxUnit2,
#FxUnit4,
#FxRackFillerL,
#FxRackFillerR,
#MicRack, #AuxRack {
  margin-left: 2px;
}
/* gap in between compact decks is managed
  by #CompactDecksCenterSpacer in order to have VU meters
  directly attached to each deck.
  A highlight connection to [LateNight],show_vumeters_compact
  can be used for the borders but screws up the margin: contents
  are rendered beyond the parent border */

#SamplerRow {
  qproperty-layoutSpacing: 4;
}

#MicRack, #AuxRack {
  qproperty-layoutSpacing: 3;
}

#SkinSettingsContainer {
  margin-left: 3px;
}


/************** Waveforms *****************************************************/

#WaveformsContainer {
  padding-bottom: 1px;
}

#WaveformBox1,
#WaveformBox2,
#WaveformBox3,
#WaveformBox4 {
  border-left: 0px;
  }
  #WaveformBox1,
  #WaveformBox3 {
    border-bottom: 0px;
  }
  #WaveformBox2,
  #WaveformBox4 {
    border-top: 0px;
  }
  /* Hide some borders when 4 decks are visible */
  #WaveformBox1[highlight="1"] {
    border-top: 0px;
  }
  #WaveformBox2[highlight="1"] {
    border-bottom: 0px;
  }


/************** Decks *********************************************************/

#DeckMini1,
#DeckMini2,
#DeckMini3,
#DeckMini4 {
  padding: 0px 4px 0px 1px;
}

/* All rows in FULL deck */
#DeckRows12345,
#DeckRows2345 {
  margin: 2px 0px 2px 2px;
  background-color: transparent;
}
  /* All rows in compact deck */
#DeckRows2345 {
}
#DeckRows234 {
}

#DeckRow_1_KeyVinylFx {
  margin-bottom: 1px;
  }
  #ExpandingBottomBorder {
    border-width: 0px 0px 1px 0px;
  }
  #KeyTextSmall {
    padding: 0px 1px 0px 0px;
  }


#SpinnyCoverContainer_Small {
  min-width: 63px;
  max-width: 63px;
  min-height: 63px;
  max-height: 63px;
  margin: 0px 2px 1px 0px;
  }
  #SpinnyCoverContainer_SmallCompact {
    min-width: 63px;
    max-width: 63px;
    min-height: 63px;
    max-height: 63px;
    margin: 0px 2px 1px 0px;
  }
#SpinnyCoverContainer_Big {
  min-width: 114px;
  max-width: 114px;
  min-height: 114px;
  max-height: 114px;
  margin: 1px 2px 1px 0px;
  }
  #SpinnyCoverContainer_BigCompact {
    min-width: 109px;
    max-width: 109px;
    min-height: 109px;
    max-height: 109px;
    margin: 0px 2px 1px 0px;
  }
#SpinnyCoverContainer_MiniDeck {
  min-width: 53px;
  max-width: 53px;
  min-height: 53px;
  max-height: 53px;
  /* for some reason margin-right is only halve the value set here... */
  margin: 0px 0px 1px 4px;
}

#DeckRow_2_3_ArtistTitleTime {
  padding-left: 1px;
  margin: 0px;
  }
  #DeckRow_2_3_ArtistTitleTime[highlight="0"] {
    border-width: 0px 0px 0px 0px;
    }
    #DeckRow_2_3_ArtistTitleTime[highlight="1"] {
      border-width: 0px 1px 0px 0px;
    }
  #ArtistRow, #TitleRow {
    padding-right: 2px;
    }
    #ArtistText,
    #TitleText {
      /* for some reason the padding/margin is doubled in the skin... */
      padding: 0px 2px 1px 0px;
    }
    #PlayPositionText,
    #DurationText {
      /* for some reason the padding/margin is doubled in the skin... */
      padding: 0px 1px 1px 1px;
    }

    #TitleTextSmall {
      padding: 1px 3px 1px 1px;
    }
    #ArtistTextSmall {
      margin: 0px 0px 0px 1px;
      padding: 0px 1px 0px 0px;
    }
    #PlayPositionTextSmall {
      padding: 0px 0px 2px 2px;
    }

 #OverviewBoxMini {
    margin: 1px 0px;
  }

#DeckSettingsContainer[highlight="0"] {
  border-width: 1px 0px 0px 0px;
  }
  #DeckSettingsContainer[highlight="1"] {
    border-width: 1px 1px 0px 0px;
  }
#DeckSettingsContainerCompact[highlight="0"] {
  border-width: 1px 0px 1px 0px;
  }
  #DeckSettingsContainerCompact[highlight="1"] {
    border-width: 1px 1px 1px 0px;
  }

#DeckRow_5_Compact {
  padding-top: 2px;
  }
  #DeckRow_5_Compact[highlight="0"] {
    border-width: 0px 0px 0px 0px;
    }
    #DeckRow_5_Compact[highlight="1"] {
      border-width: 0px 1px 0px 0px;
    }

  #DeckRow_5_LoopCuesTransport,
  #DeckRow_5_LoopCuesTransportCompact {
    padding: 1px 1px 2px 1px;
    }
  #DeckRow_5_LoopCuesTransport {
    margin: 2px 0px 0px 0px;
    }
    #PlayCueMini {
      margin: 1px 1px 1px 0px;
    }



/************** RateControls ********************************************/

#RateContainer {
  padding: 4px 0px 0px 0px;
  }

  #RateText {
    padding: 0px;
    margin: 0px;
  }

  #SyncBox {
    margin: 2px 1px 1px 0px;
  }

  #RateControls {
    margin: 0px 2px;
    }
    #RateButtons {
      margin-right: 3px;
    }



/********************** Loop Controls / AutoDJ spinbox ************************/

  WBeatSpinBox {
    border-width: 2px 19px 2px 2px;
    border-image: url(skin:/classic/buttons/spinbox_elevated_border.svg) 2 19 2 2;
    margin: 1px 0px 0px 1px;
    padding: 0px -17px 2px 1px;
    background-color: #0f0f0f;
    }
    WBeatSpinBox:focus {
      border-image: url(skin:/classic/buttons/spinbox_elevated_border_focus.svg) 2 19 2 2;
    }

  #spinBoxTransition {
    border-width: 3px 19px 2px 3px;
    border-image: url(skin:/classic/buttons/spinbox_embedded_border.svg) 3 19 2 3;
    width: 24px;
    height: 19px;
    padding: 0px -15px 0px 0px;
    margin: 0px 2px 3px 5px;
    background-color: #0f0f0f;
    }
    #spinBoxTransition:focus {
      border-image: url(skin:/classic/buttons/spinbox_embedded_border_focus_orange.svg) 3 19 2 3;
    }

  WBeatSpinBox::up-button,
  WBeatSpinBox::down-button,
  #spinBoxTransition::up-button,
  #spinBoxTransition::down-button {
    subcontrol-origin: content;
    position: relative;
    /* as with spinbox: border is added to size. */
    width: 17px;
    padding: 0px;
    }
    WBeatSpinBox::up-button,
    #spinBoxTransition::up-button {
      height: 11px;
      subcontrol-position: top right;
      image: url(skin:/classic/buttons/spinbox_up.svg) no-repeat;
      }
      WBeatSpinBox::up-button:pressed,
      #spinBoxTransition::up-button:pressed {
        image: url(skin:/classic/buttons/spinbox_up_pressed.svg) no-repeat;
      }
      WBeatSpinBox::up-button {
        margin: -1px 0px 0px 0px;
        }
      #spinBoxTransition::up-button {
        margin: -2px -3px 0px 0px;
        }
    WBeatSpinBox::down-button,
    #spinBoxTransition::down-button {
      height: 11px;
      subcontrol-position: bottom right;
      image: url(skin:/classic/buttons/spinbox_down.svg) no-repeat;
      }
      WBeatSpinBox::down-button:pressed,
      #spinBoxTransition::down-button:pressed {
        image: url(skin:/classic/buttons/spinbox_down_pressed.svg) no-repeat;
      }
      WBeatSpinBox::down-button {
        margin: 0px 0px -2px 0px;
        }
      #spinBoxTransition::down-button {
        margin: 0px -3px -1px 0px;
        }



/************** Mixer *********************************************************/

#MixerDecks {
  padding: 2px 6px 2px 6px;
  }
  #MixerChannel_2Decks_Left {
    margin: 0px 2px;
  }
  #MixerChannel_2Decks_Right {
    margin: 0px 2px;
  }
  #VolumeGain2Decks {
    margin: 0px 2px;
  }
  #VuAndSlider_4Decks {
    margin-right: 1px;
  }

  #PflBox_4Decks {
    margin: 3px 0px 0px 20px;
  }

  #CrossfaderSwitch_4Decks {
    margin: 0px 3px 3px 0px;
  }
  #Crossfader {
    padding: 0px 0px 0px 1px;
  }

  #CrossfaderButtonContainer_Deck,
  #CrossfaderButtonContainer_Aux {
    padding: 1px;
    border-bottom: 1px solid #333;
    border-right: 1px solid #333;
    border-bottom-right-radius: 1px;
    }
  #CrossfaderButtonContainer_Aux {
    margin-left: 4px;
    }
    #CrossfaderButton[value="1"] {
      background-color: #262626;
    }

#MixerMasterHeadphone {
  margin: 2px 2px 2px 0px;
  }
  #MasterControls {
    padding: 2px;
    margin-bottom: 2px;
  }
  #MasterHeadphoneSeparator {
    min-height: 0px;
    max-height: 0px;
    }
    #BoothLabelBox {
      padding: 0px 0px 2px 2px;
    }
  #HeadphoneControls {
    padding: 2px;
  }

/* All VU meter instances */
#VuMeterChannel_2Decks {
  margin: 0px 9px 2px 9px;
}
#VuMeterChannel_4Decks {
  margin: 6px 0px 6px 11px;
}
#VuMeterMaster_2Decks {
  margin: 0px 0px 2px 0px;
}
#VuMeterMaster_4Decks {
  margin: 5px 0px;
}

#VuMeterMaster_Compact {
  margin-right: 4px;
  margin-left: 4px;
  padding: 0px 5px;
}
#VuMeterDeck1_Compact,
#VuMeterDeck3_Compact {
  padding: 0px 4px 0px 5px;
  border-top-left-radius: 0px;
  border-bottom-left-radius: 1px;
}
#VuMeterDeck2_Compact,
#VuMeterDeck4_Compact {
  padding: 0px 5px 0px 4px;
  border-top-right-radius: 0px;
  border-bottom-right-radius: 1px;
}

/************** Fx *********************************************************/

#FxUnitHeaderCollapsed[highlight="0"],
#FxUnitHeaderCollapsed[highlight="1"] {
  border-left: 0px;
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px;
  }
  #FxUnitHeaderExpanded[highlight="0"],
  #FxUnitHeaderExpanded[highlight="1"] {
    border-bottom-left-radius: 0px;
  }
  #FxUnitHeader {
    padding: 0px 2px 0px 2px;
  }
#FxUnitHeaderCollapsed[highlight="1"],
#FxUnitHeaderExpanded[highlight="1"] {
  border-top: 1px solid #d09300;
  border-right: 1px solid #d09300;
}

#FxUnitControlsExpanded,
#FxUnitControlsCollapsed {
  padding: 0px 0px 0px 3px;
  }
  #FxUnitControlsCollapsed {
    margin: 2px 2px 2px 0px;
  }
  #FxUnitControlsExpanded {
    margin-right: 2px;
  }

#DryWetKnob,
#SuperKnob {
  margin: 0px 1px;
}

#FxSlotsCollapsed #FxSlotContainer {
  margin: 2px 7px 1px 5px;
}

#FxSlotsExpanded #FxSlotControls {
  margin: 1px 5px 1px 4px;
}

#FxMetaKnob {
  padding: 1px 4px 2px 4px;
}

#FxSlotsExpanded {
  margin: 2px 0px 2px 3px;
}
#FxSlotsCollapsed {
  margin: 2px 0px 2px 0px;
  }
  #FxSlot1,
  #FxSlot2,
  #FxSlot3 {
    padding: 2px 4px 1px 2px;
  }
  #FxSlotsExpanded #FxSlot1,
  #FxSlotsExpanded #FxSlot2,
  #FxSlotsExpanded #FxSlot3 {
    padding-right: 7px;
  }

#FxParametersContainer {
  padding: 2px 1px 1px 1px;
  margin: 2px 1px;
}

#FxFocusButtonBox {
  margin-right: 3px;
}

WPushButton#FxSuperLinkButton,
WPushButton#FxSuperLinkInvertButton {
  border-radius: 3px;
  margin: 1px 1px 0px 0px;
}

WEffectSelector,
#fadeModeCombobox {
  /* The 3D frame on the combo box becomes flat when you give it a border
  border-radius: 3px; */
  }
  WEffectSelector:!editable,
  WEffectSelector:!editable:on {
    /* If you use margin top/bottom 0, the combo box shrinks in width (go figure) and
        names start getting cut off. Adding explicit padding improves this. */
    padding: 0px 0px 2px 5px;
    margin: 0px;
  }
  #fadeModeCombobox:!editable,
  #fadeModeCombobox:!editable:on {
    height: 19px;
    padding: 0px 0px 1px 5px;
    margin: 0px 1px 2px 1px;
  }
  WEffectSelector::down-arrow,
  #fadeModeCombobox::down-arrow {
    image: url(skin:/classic/buttons/btn__fx_selector_down.svg);
    }
    WEffectSelector::down-arrow:hover,
    #fadeModeCombobox::down-arrow:hover {
      image: url(skin:/classic/buttons/btn__fx_selector_down_pressed.svg);
    }


/************** Sampler ****************************************************/

#SamplerExpandBox {
  padding: 0px 1px 0px 1px;
}

#SamplerMini {
  padding: 1px;
  }
  #SamplerTitleBoxMini {
    padding: 0px 0px 0px 2px;
  }
  #SamplerPlayBoxMini {
    padding: 1px;
  }
  #SamplerBpmMini {
    margin-left: 1px;
  }

#Sampler {
  padding: 1px 0px 2px 2px;
  }
  #SamplerTitleRow {
    margin: 0px 1px 0px 0px;
    }
    #SamplerTitle {
      padding: 1px 3px 1px 0px;
    }
    #SamplerBpm {
      margin-right: 2px;
    }

  #SamplerRows23 {
    }
    #SamplerPlayRow {
    }
    #SamplerPlayBox {
      padding: 0px 2px 1px 0px;
    }
    #SamplerSettings {
      border-width: 1px 1px 0px 0px;
    }

  #SamplerButtons {
    }
    #SamplerHotcues {
      padding: 1px 1px 2px 1px;
    }

  #SamplerGainPflVu_Container {
    }
    #SamplerGainPflVu {
      }
      #SamplerGain {
        padding: 3px 0px 0px 3px;
        border-width: 1px 0px 0px 0px;
      }
      #SamplerPfl {
        padding: 0px 4px 2px 4px;
        border-width: 0px;
      }
      #SamplerVU {
        padding: 2px 3px 0px 3px;
        border-width: 1px 1px 0px 0px;
      }

  #SamplerRateControls {
    padding: 0px 1px 1px 0px;
    }
    #SamplerPitchSlider {
      padding: 0px 0px 1px 0px;
    }


/************** MicAux *****************************************************/

#MicDuckingContainer {
  }
  #MicDuckingModeBox {
    padding: 2px 2px 0px 2px;
  }
  #MicDuckingStrengthBox {
    padding: 2px 0px;
  }

#MicAuxMainControls {
  border-radius: 2px;
  padding: 0px 1px 0px 2px;
  border-bottom-left-radius: 1px;
  border-top-right-radius: 1px;
  }
  #MicAuxLabel {
    padding: 3px 0px 3px 1px;
  }

  #AuxPlayBox,
  #MicTalkBox {
    padding: 0px 0px 2px 1px;
  }

  #MicAuxAddBox {
    margin: 1px 0px 1px 1px;
  }

  #MicAuxVUMeter {
    padding: 2px 1px 3px 0px;
    margin-left: 2px;
  }

#MicAuxSubControls {
  border-width: 0px;
  padding: 0px 3px 3px 3px;
  }
  #MicAuxFxButtons {
    padding: 2px 0px;
  }

#MicAuxAddFrame {
  padding: 2px 4px 4px 4px;
}


/************** PreviewDeck ***************************************************/

#PreviewDeck {
  padding: 2px 1px;
  }

  #PreviewDeckTextBox {
    }
    #PreviewLabel { /* Placeholder when no track is loaded */
      padding-left: 2px;
    }
    #PreviewTitle {
      margin: 0px 2px 0px 0px;
    }
    #PreviewBPM {
      padding-left: 2px;
    }
    #PreviewEjectBox {
      padding-bottom: 2px;
    }

  #PreviewDeck #OverviewBox {
    margin: 1px 2px 0px 2px;
  }



/************** SkinSettings **************************************************/

#DeckSizeSettings {
  margin: 2px 0px 0px 0px;
  }
  #DeckSizeToggleContainer {
    padding: 0px 0px 0px 0px;
    }
    #SkinSettingsNumToggle {
      margin-left: 1px;
    }

#SkinSettingsCategory {
  padding: 2px 5px 7px 3px;
  }
  #SkinSettingsSubMenu {
    padding: 0px 0px 0px 13px;
  }
  #CategoryLabel {
    padding: 3px 0px 2px 0px;
  }
  #SkinSettingsLabelButton {
    padding: 0px 0px 0px 3px;
  }

  #SamplerLoadSaveBox {
    padding-left: 18px;
  }


/******************************************************************************
******************** Container layouts, margins etc. *************************/




/************** font colors ***************************************************
******************************************************************************/
WEffectSelector,
WEffectSelector QAbstractScrollArea,
#fadeModeCombobox,
#fadeModeCombobox QAbstractScrollArea {
  font-family: "Open Sans";
  font-weight: bold;
}
/* yellow */
#Deck1 WLabel, #DeckCompact1 WLabel, #DeckMini1 WLabel,
  #Deck1 WStarRating, #DeckCompact1 WStarRating,
#Deck2 WLabel, #DeckCompact2 WLabel, #DeckMini2 WLabel,
  #Deck2 WStarRating, #DeckCompact2 WStarRating,
#MicAuxLabel,
#SamplerTitle, #SamplerTitleMini,
#SamplerBpm, #SamplerBpmMini,
#PreviewDeckTextBox, #PreviewTitle, #PreviewBPM,
#CategoryLabel,
#SkinSettingsLabelButton,
#SkinSettingsNumToggleHeader[displayValue="1"],
WSearchLineEdit,
#LibraryBPMSpinBox,
#LibraryBPMButton::item,
WTrackTableView,
WTrackTableView::indicator,
WLibraryTextBrowser,
WLibrarySidebar,
#LibraryFeatureControls QLabel,
#LibraryFeatureControls QRadioButton,
QToolTip,
WLibrarySidebar QMenu,
WTrackTableViewHeader QMenu,
WLibraryTextBrowser QMenu,
WTrackMenu,
WTrackMenu QMenu,
WTrackMenu QMenu QCheckBox,
QLineEdit QMenu,
WCoverArtMenu,
WCueMenuPopup,
WCueMenuPopup QLabel,
#CueLabelEdit,
#LatencyLabel, WTime {
  color: #f0bb2b;
  }
  #SkinSettingsNumToggleHeader[displayValue="0"] {
    color: #b9901f;
  }

/* light blue */
#Deck3 WLabel, #DeckCompact3 WLabel, #DeckMini3 WLabel,
  #Deck3 WStarRating, #DeckCompact3 WStarRating,
#Deck4 WLabel, #DeckCompact4 WLabel, #DeckMini4 WLabel,
  #Deck4 WStarRating, #DeckCompact4 WStarRating,
#AuxSubTitle {
  color: #0bd9d1;
}

/* green for Fx 1/2 */
#FxUnit1 #FxUnitLabel[highlight="1"],
#FxUnit2 #FxUnitLabel[highlight="1"] {
  color: #73b508;
}

/* blue for Fx 3/4 */
#FxUnit3 #FxUnitLabel[highlight="1"],
#FxUnit4 #FxUnitLabel[highlight="1"] {
  color: #0795b5;
  }
  #FxUnitControllerInputIndicator {
    margin: 2px 0px;
  }
  #FxUnit1 #FxUnitControllerInputIndicator[highlight="1"],
  #FxUnit2 #FxUnitControllerInputIndicator[highlight="1"] {
    background-color: #73b508;
    color: #73b508;
  }
  #FxUnit3 #FxUnitControllerInputIndicator[highlight="1"],
  #FxUnit4 #FxUnitControllerInputIndicator[highlight="1"] {
    background-color: #0795b5;
    color: #0795b5;
  }

/* Grey */
#PreviewLabel,
WEffectSelector:!editable,
WEffectSelector:!editable:on,
WEffectSelector QAbstractScrollArea,
#fadeModeCombobox:!editable,
#fadeModeCombobox:!editable:on,
#fadeModeCombobox QAbstractScrollArea,
WBeatSpinBox, #spinBoxTransition,
#LibraryFeatureControls QLabel,
#LibraryFeatureControls QRadioButton {
  color: #888;
}

/* Darker grey for knob labels & inactive decks/units */
#KnobLabel,
#FxKnobLabel,
#FxButtonLabel,
#FxUnitLabel[highlight="0"],
#MicAuxLabelUnconfigured,
#LibraryFeatureControls QPushButton:!enabled {
  color: #666;
}

#MainMenu::item,
#MainMenu QMenu::item,
#MainMenu QMenu QCheckBox,
#VinylButton[displayValue="0"],
#VinylModeButton,
#PassthroughButton[displayValue="0"],
#FxAssignButtons WPushButton[displayValue="0"],
#GuiToggleButton[displayValue="0"],
#BroadcastButton[displayValue="0"],
#SkinSettingsToggle[displayValue="0"],
#RecDuration[highlight="0"] {
  color: #d2d2d1;
  }

#VinylButton[displayValue="1"],
#PassthroughButton[displayValue="1"],
#VinylCueButton[displayValue="1"],
#VinylCueButton[displayValue="2"],
#FxAssignButtons WPushButton[displayValue="1"],
#GuiToggleButton[displayValue="1"],
#GuiToggleButton[displayValue="2"],
#BroadcastButton[displayValue="1"],
#BroadcastButton[displayValue="2"],
#BroadcastButton[displayValue="3"],
#BroadcastButton[displayValue="4"],
#RecDuration[highlight="1"],
#RecDuration[highlight="2"],
#SkinSettingsToggle[displayValue="1"],
QPushButton#pushButtonAutoDJ:checked,
QPushButton#pushButtonRepeatPlaylist:checked,
QPushButton#pushButtonAnalyze:checked,
QPushButton#pushButtonRecording:checked {
  color: #000;
}

#LibraryFeatureControls QPushButton:pressed {
  color: #999;
}

#MixerMasterHeadphone WLabel,
#FxKnobLabel,
#FxButtonLabel {
  padding: 0px;
  background-color: #151515;
}

/* Passthrough label on overview waveform */
WOverview #PassthroughLabel {
  color: #d09300;
}
  #SkinSettingsButton,
  #SkinSettingsNumToggle,
  #SkinSettingsText {
    color: #d2d2d2;
  }
  #SkinSettingsNumToggle[value="1"] {
    color: #fff;
  }
  #SkinSettingsNumToggle[value="1"],
  #SkinSettingsNumToggleHeader[displayValue="1"] {
    text-decoration: underline;
  }


/* Library controls in AutoDJ etc. */
#LibraryFeatureControls QPushButton {
  color: #bbb;
  }

/*****************************************************************************/
/************** font colors **************************************************/



/************** Button styles *************************************************
*************** Button borders ************************************************/
/* crop shadow on the left border for all buttons in Fx assign and vinyl control grid
  (except leftmost button in each grid > overwritten in the block below) */
#VinylModeButton,
#VinylCueButton[displayValue="0"],
#PassthroughButton[displayValue="0"],
#FxAssignButtons WPushButton[displayValue="0"] {
  outline: none;
  border-width: 2px 2px 2px 1px;
  border-image: url(skin:/classic/buttons/btn_embedded_grid.svg) 2 2 2 1;
  }
  /* Active */
  #VinylCueButton[displayValue="1"],
  #VinylCueButton[displayValue="2"],
  #PassthroughButton[displayValue="1"],
  #FxAssignButtons WPushButton[displayValue="1"] {
    outline: none;
    border-width: 2px 2px 2px 1px;
    border-image: url(skin:/classic/buttons/btn_embedded_grid_active.svg) 2 2 2 1;
  }
WPushButton#FxAssignButton1[displayValue="0"],
#VinylButton[displayValue="0"],
#KeyMatchReset[displayValue="0"],
#GuiToggleButton[displayValue="0"],
#RecFeedback[displayValue="0"],
#BroadcastButton[displayValue="0"],
#SkinSettingsToggle[displayValue="0"],
#LibraryFeatureControls QPushButton,
WEffectSelector:!editable,
#fadeModeCombobox:!editable {
  border-width: 2px;
  border-image: url(skin:/classic/buttons/btn_embedded_library.svg) 2 2 2 2;
  }
WPushButton#VinylButton[displayValue="1"],
WPushButton#FxAssignButton1[displayValue="1"],
#KeyMatchReset[pressed="true"],
#GuiToggleButton[displayValue="1"],
#RecFeedback[displayValue="1"],
#RecFeedback[displayValue="2"],
#BroadcastButton[displayValue="1"],
#BroadcastButton[displayValue="2"],
#BroadcastButton[displayValue="3"],
#BroadcastButton[displayValue="4"],
#SkinSettingsToggle[displayValue="1"],
#LibraryFeatureControls QPushButton:pressed,
QPushButton#pushButtonAutoDJ:checked,
QPushButton#pushButtonRepeatPlaylist:checked,
QPushButton#pushButtonAnalyze:checked,
QPushButton#pushButtonRecording:checked,
WEffectSelector:!editable:on,
#fadeModeCombobox:!editable:on {
  border-width: 2px;
  border-image: url(skin:/classic/buttons/btn_embedded_library_active.svg) 2 2 2 2;
  }
  #KeyUp {
    border-width: 1px 2px 0px 2px;
    border-image: url(skin:/classic/buttons/btn_embedded_library.svg) 1 2 12 2;
    }
  #KeyDown {
    border-width: 0px 2px 1px 2px;
    border-image: url(skin:/classic/buttons/btn_embedded_library.svg) 12 2 1 2;
    }

/* Library controls in AutoDJ etc. */
  #LibraryFeatureControls QPushButton:focus {
    outline: none;
  }

/* Highlight WEffectSelector when effect is active */
WEffectSelector[highlight="1"] {  /*
  background-color: #6AAF04;
  color: #000;
  border-image: url(skin:/classic/buttons/btn_embedded_effectselector_active.svg) 2 2 2 2;  */
}

#BeatgridControls WPushButton, WPushButton#BeatgridControlsToggle,
#DeckRow_5_LoopCuesTransport WPushButton,
WPushButton#PlayDeck,
WPushButton#PreviewIndicator,
WPushButton#PlayIndicator,
WPushButton#CueDeck,
#PlayCueMini WPushButton,
WPushButton#LoopActivate,
WPushButton#RateControls WPushButton,
WPushButton#SyncDeck,
WPushButton#SyncLeader,
WPushButton#SyncSampler,
#MixerContainer WPushButton,
#FxUnitContainer WPushButton,
#Sampler WPushButton,
#SamplerMini WPushButton,
#MicAuxRack WPushButton,
WPushButton#PlayPreview {
  /* Limit background-color area to button area designed in SVG backpath. */
  margin: 1px;
  /* just to be sure the colored background doesn't overlap the rounded SVG border */
  border-radius: 2px;
}

WPushButton#FxExpand,
WPushButton#SamplerExpand,
#FxAssignButtons WPushButton,
#VinylControls WPushButton,
#KeyControls WPushButton,
#SamplerSettings WPushButton,
#SamplerSettingsMini WPushButton,
WPushButton#CrossfaderButton,
WPushButton#FxExpandOverlay,
WPushButton#LibExpand,
#ToolBar WPushButton {
  margin: 0px;
  border-radius: 0px;
}



/************** button background colors **************************************/

/* top-level buttons in transport, fx, micaux and others */
#BeatgridControls WPushButton[displayValue="0"],
#DeckRow_5_LoopCuesTransport WPushButton[displayValue="0"],
#PlayCueMini WPushButton[displayValue="0"],
WPushButton#CueDeck[displayValue="0"],
WPushButton#PlayIndicator[value="0"],
WPushButton#LoopActivate[displayValue="0"],
#FxAssignButtons WPushButton[displayValue="0"],
#VinylControls WPushButton[displayValue="0"],
#KeyControls WPushButton[displayValue="0"],
WPushButton#VinylModeButton[displayValue="1"],
WPushButton#VinylModeButton[displayValue="2"],
WPushButton#MixModeButton[displayValue="1"],
#RateControls WPushButton[displayValue="0"],
WPushButton#SyncDeck[value="0"],
#MixerContainer WPushButton[displayValue="0"],
#FxUnitContainer WPushButton[displayValue="0"],
#Sampler WPushButton[displayValue="0"],
#MicAuxRack WPushButton[displayValue="0"],
/* library buttons */
QPushButton#pushButtonAutoDJ:enabled:!checked,
#LibraryFeatureControls QPushButton:enabled,
WPushButton#GuiToggleButton[displayValue="0"],
#RecFeedback[displayValue="0"],
WPushButton#BroadcastButton[displayValue="0"],
WPushButton#SkinSettingsToggle[displayValue="0"] {
  background-color: #262626;
}

/* Orange for 'partially active' status */
#SyncLeader[value="1"] {
background-color: #db7700;
}

/* Red for 'active' status */
#BeatgridControls WPushButton[value="1"],
#RateControls WPushButton[value="1"],
#SyncDeck[value="1"],
#SyncLeader[value="2"],
#SyncSampler[displayValue="1"],
WPushButton#PlayDeck[displayValue="1"],
WPushButton#PlayDeckMini[displayValue="1"],
WPushButton#PlaySampler[displayValue="1"],
WPushButton#PlayPreview[displayValue="1"],
WPushButton#PlayIndicator[displayValue="1"],
#LibraryPreviewButton:checked,
#CueDeck[displayValue="1"],
WPushButton#Reverse[pressed="true"],
#KeyControls WPushButton[pressed="true"],
#LoopControls WPushButton[value="1"],
#LoopActivate[displayValue="1"],
#BeatjumpControls WPushButton[value="1"],
#EQKillButtonBox WPushButton[displayValue="1"],
#PflButton[value="1"],
#MicTalk[value="1"], #AuxPlay[value="1"],
#MicDucking[value="1"], #MicDucking[value="2"],
#RecFeedback[displayValue="2"],
QPushButton#pushButtonRecording:checked {
  background-color: #db0000;
  }
  /* Red border for Play buttons when previewing from
    Cue or Hotcue */
  WPushButton#PreviewIndicator[value="1"] {
    border: 3px solid #db0000;
    /* work around round borders being painted outside the actual border area */
    border-radius: 0px;
  }

/* Green for Fx buttons: QuickEffect + Fx 1/2 */
#FxUnit1 #FxToggleButton[displayValue="1"],
#FxUnit2 #FxToggleButton[displayValue="1"],
WPushButton#QuickEffectButton[displayValue="1"],
#FxAssignButton1[displayValue="1"],
#FxAssignButton2[displayValue="1"],
#BroadcastButton[displayValue="2"] {
  background-color: #659f08;
}
/* Blue for Fx buttons 3/4 */
#FxUnit3 #FxToggleButton[displayValue="1"],
#FxUnit4 #FxToggleButton[displayValue="1"],
#FxAssignButton3[displayValue="1"],
#FxAssignButton4[displayValue="1"] {
  background-color: #0895bc;
}

/* Emphasize Fx parameter buttons on dark background
    because they don't have bright icons */
WPushButton#FxParameterButton[displayValue="0"] {
  background-color: #333;
}

/* Grey for Pfl, Fx parameters & SplitCue */
#VinylCueButton[displayValue="1"],
#VinylCueButton[displayValue="2"],
#FxParameterButton[displayValue="1"],
#SplitCue[value="1"],
QPushButton#pushButtonRepeatPlaylist:checked {
  background-color: #888;
}

#BroadcastButton[displayValue="3"],
#BroadcastButton[displayValue="4"] {
  /* pink */
  background-color: #f856e7;
}

/* Golden */
#VinylButton[displayValue="1"],
#PassthroughButton[displayValue="1"],
#GuiToggleButton[displayValue="1"],
#GuiToggleButton[displayValue="2"],
#BroadcastButton[displayValue="1"],   /* connecting: yellow */
#RecFeedback[displayValue="1"],   /* initialize recording */
#SkinSettingsToggle[displayValue="1"],
QPushButton#pushButtonAutoDJ:checked,
QPushButton#pushButtonAnalyze:checked {
  background-color: #d09300;
}

#SpecialCueButton[value="1"] {
  background-color: #0044ff;
}

#FxSuperLinkButton[value="0"],
#FxSuperLinkInvertButton[displayValue="0"] {
  background-color: #4b4b4b;
}
#FxSuperLinkInvertButton[displayValue="1"] {
  background-color: #9C0900;
  }

/* Green for Fx1 / Fx2 */
#FxUnit1 #FxSuperLinkButton[value="1"],
#FxUnit2 #FxSuperLinkButton[value="1"] {
  background-color: #426b00;
  }
#FxUnit1 #FxSuperLinkButton[value="2"],
#FxUnit2 #FxSuperLinkButton[value="2"] {  /*
  a simple way to achieve a partitioning in thirds  */
  background-color: qlineargradient(x1: 0, y1: 0, x2: 1, y2: 0,
    stop: 0 #426b00,
    stop: 0.33 #426b00,
    stop: 0.34 #333,
    stop: 1 #333);
  }
#FxUnit1 #FxSuperLinkButton[value="3"],
#FxUnit2 #FxSuperLinkButton[value="3"] {
  background-color: qlineargradient(x1: 0, y1: 0, x2: 1, y2: 0,
    stop: 0 #333,
    stop: 0.66 #333,
    stop: 0.67 #426b00,
    stop: 1 #426b00);
  }
#FxUnit1 #FxSuperLinkButton[value="4"],
#FxUnit2 #FxSuperLinkButton[value="4"] {
  background-color: qlineargradient(x1: 0, y1: 0, x2: 1, y2: 0,
    stop: 0 #426b00,
    stop: 0.330000 #426b00,
    stop: 0.340000 #333,
    stop: 0.660000 #333,
    stop: 0.670000 #426b00,
    stop: 1 #426b00);
  }

/* Blue for Fx3 / Fx4 */
#FxUnit3 #FxSuperLinkButton[value="1"],
#FxUnit4 #FxSuperLinkButton[value="1"] {
  background-color: #00696b;
  }
#FxUnit3 #FxSuperLinkButton[value="2"],
#FxUnit4 #FxSuperLinkButton[value="2"] {  /*
  a simple way to achieve a partitioning in thirds  */
  background-color: qlineargradient(x1: 0, y1: 0, x2: 1, y2: 0,
    stop: 0 #00696b,
    stop: 0.33 #00696b,
    stop: 0.34 #333,
    stop: 1 #333);
  }
#FxUnit3 #FxSuperLinkButton[value="3"],
#FxUnit4 #FxSuperLinkButton[value="3"] {
  background-color: qlineargradient(x1: 0, y1: 0, x2: 1, y2: 0,
    stop: 0 #333,
    stop: 0.66 #333,
    stop: 0.67 #00696b,
    stop: 1 #00696b);
  }
#FxUnit3 #FxSuperLinkButton[value="4"],
#FxUnit4 #FxSuperLinkButton[value="4"] {
  background-color: qlineargradient(x1: 0, y1: 0, x2: 1, y2: 0,
    stop: 0 #00696b,
    stop: 0.330000 #00696b,
    stop: 0.340000 #333,
    stop: 0.660000 #333,
    stop: 0.670000 #00696b,
    stop: 1 #00696b);
  }

/* Special flat buttons */
WPushButton#PlayDeck[displayValue="0"],
WPushButton#PlayDeckMini[displayValue="0"],
WPushButton#PlaySampler[displayValue="0"],
WPushButton#BpmTap[displayValue="0"],
WPushButton#FxFocusButton[displayValue="0"],
#SamplerSettings WPushButton[displayValue="0"],
#SamplerSettingsMini WPushButton[displayValue="0"],
WPushButton#FxExpand[displayValue="0"],
WPushButton#FxExpandOverlay[displayValue="0"],
WPushButton#SamplerExpand[displayValue="0"],
#BeatgridControlsToggle,
#SamplerControlsMini WPushButton,
#RecDot {
  background-color: transparent;
}

/************** Button icons **************************************************/

#PlayDeck {
  image: url(skin:/classic/buttons/btn__play_deck.svg) no-repeat center center;
}

#PlayDeckMini[value="0"] {
  image: url(skin:/classic/buttons/btn__play_deck_mini.svg) no-repeat center center;
  }
  #PlayDeckMini[value="1"] {
    image: url(skin:/classic/buttons/btn__pause_deck_mini.svg) no-repeat center center;
  }
#PlaySampler[value="0"],
#PlayPreview[displayValue="0"] {
  image: url(skin:/classic/buttons/btn__play_sampler.svg) no-repeat center center;
  }
  #PlaySampler[value="1"],
  #PlayPreview[displayValue="1"] {
    image: url(skin:/classic/buttons/btn__pause_sampler.svg) no-repeat center center;
  }

#CueDeck {
  image: url(skin:/classic/buttons/btn__cue_deck.svg) no-repeat center center;
}

#Reverse {
  image: url(skin:/classic/buttons/btn__reverse.svg) no-repeat center center;
}

#Hotcue1 WPushButton {
  image: url(skin:/classic/buttons/btn__1.svg) no-repeat center center;
  }
  #Hotcue2 WPushButton {
    image: url(skin:/classic/buttons/btn__2.svg) no-repeat center center;
  }
  #Hotcue3 WPushButton {
    image: url(skin:/classic/buttons/btn__3.svg) no-repeat center center;
  }
  #Hotcue4 WPushButton {
    image: url(skin:/classic/buttons/btn__4.svg) no-repeat center center;
  }
  #Hotcue5 WPushButton {
    image: url(skin:/classic/buttons/btn__5.svg) no-repeat center center;
  }
  #Hotcue6 WPushButton {
    image: url(skin:/classic/buttons/btn__6.svg) no-repeat center center;
  }
  #Hotcue7 WPushButton {
    image: url(skin:/classic/buttons/btn__7.svg) no-repeat center center;
  }
  #Hotcue8 WPushButton {
    image: url(skin:/classic/buttons/btn__8.svg) no-repeat center center;
  }

#SpecialCueButton_intro_start WPushButton {
  image: url(skin:/classic/buttons/btn__intro_start.svg) no-repeat center center;
  }
  #SpecialCueButton_intro_end WPushButton {
    image: url(skin:/classic/buttons/btn__intro_end.svg) no-repeat center center;
  }
  #SpecialCueButton_outro_start WPushButton {
    image: url(skin:/classic/buttons/btn__outro_start.svg) no-repeat center center;
  }
  #SpecialCueButton_outro_end WPushButton {
    image: url(skin:/classic/buttons/btn__outro_end.svg) no-repeat center center;
  }

#LoopActivate {
  image: url(skin:/classic/buttons/btn__loop.svg) no-repeat center center;
}
#Reloop {
  image: url(skin:/classic/buttons/btn__reloop.svg) no-repeat center center;
}

#LoopIn {
  image: url(skin:/classic/buttons/btn__loop_in.svg) no-repeat center center;
}
#LoopOut {
  image: url(skin:/classic/buttons/btn__loop_out.svg) no-repeat center center;
}

#JumpForward {
  image: url(skin:/classic/buttons/btn__beatjump_right.svg) no-repeat center center;
}
#JumpBack {
  image: url(skin:/classic/buttons/btn__beatjump_left.svg) no-repeat center center;
}

/* Key buttons */
#KeyMatchReset {
  image: url(skin:/classic/buttons/btn__key_match.svg) no-repeat center center;
}

#KeyUp {
  image: url(skin:/classic/buttons/btn__key_up.svg) no-repeat center center;
}

#KeyDown {
  image: url(skin:/classic/buttons/btn__key_down.svg) no-repeat center center;
}

/* Rate buttons */
#SyncDeck {
  image: url(skin:/classic/buttons/btn__sync_deck.svg) no-repeat center center;
  }

#SyncLeader {
  image: url(skin:/classic/buttons/btn__leader_deck.svg) no-repeat center center;
  }

  #SyncSampler {
    image: url(skin:/classic/buttons/btn__sync_sampler.svg) no-repeat center center;
    }

  #RatePermUp {
    image: url(skin:/classic/buttons/btn__plus.svg) no-repeat center center;
  }

  #RatePermDown {
    image: url(skin:/classic/buttons/btn__minus.svg) no-repeat center center;
  }

  #RateTempUp {
    image: url(skin:/classic/buttons/btn__arrow_right_up.svg) no-repeat center center;
  }
  #RateTempDown {
    image: url(skin:/classic/buttons/btn__arrow_left_down.svg) no-repeat center center;
  }

  #RateTempUpRev {
    image: url(skin:/classic/buttons/btn__arrow_right_down.svg) no-repeat center center;
  }

  #RateTempDownRev {
    image: url(skin:/classic/buttons/btn__arrow_left_up.svg) no-repeat center center;
  }

/* Mixer buttons */
#PflButton {
  image: url(skin:/classic/buttons/btn__pfl.svg) no-repeat center center;
}

#QuickEffectButton[displayValue="0"] {
  image: url(skin:/classic/buttons/btn__star.svg) no-repeat center center;
}

/* EQ Kill button icons H / M / L */
#EQKillButton_High[displayValue="0"] {
  image: url(skin:/classic/buttons/btn__eq_kill_high.svg) no-repeat center center;
}
#EQKillButton_Mid[displayValue="0"] {
  image: url(skin:/classic/buttons/btn__eq_kill_mid.svg) no-repeat center center;
}
#EQKillButton_Low[displayValue="0"] {
  image: url(skin:/classic/buttons/btn__eq_kill_low.svg) no-repeat center center;
}

#SplitCue[displayValue="0"] {
  image: url(skin:/classic/buttons/btn__split.svg) no-repeat center center;
  }
  #SplitCue[displayValue="1"] {
    image: url(skin:/classic/buttons/btn__split_active.svg) no-repeat center center;
  }

#FxExpand[value="0"],
#LibExpand[value="0"] {
  image: url(skin:/classic/buttons/btn__expand.svg) no-repeat left center;
  }
  #FxExpand[value="1"],
  #LibExpand[value="1"] {
    image: url(skin:/classic/buttons/btn__collapse.svg) no-repeat left center;
  }
#SamplerExpand[value="0"] {
  image: url(skin:/classic/buttons/btn__expand_dim.svg) no-repeat left center;
  }
  #SamplerExpand[value="1"] {
    image: url(skin:/classic/buttons/btn__collapse_dim.svg) no-repeat left center;
  }

#MixModeButton[value="0"] {
  image: url(skin:/classic/buttons/btn__fx_mixmode_d-w.svg) no-repeat center center;
  }
  #MixModeButton[value="1"] {
    image: url(skin:/classic/buttons/btn__fx_mixmode_d+w.svg) no-repeat center center;
  }

#FxToggleButton[value="0"] {
  image: url(skin:/classic/buttons/btn__fx_toggle.svg) no-repeat center center;
  }
  #FxToggleButton[value="1"] {
    image: url(skin:/classic/buttons/btn__fx_toggle_active.svg) no-repeat center center;
  }

#FxFocusButton[value="0"] {
  image: url(skin:/classic/buttons/btn__fx_focus.svg) no-repeat center center;
  }
  #FxFocusButton[value="1"] {
    image: url(skin:/classic/buttons/btn__fx_focus_active.svg) no-repeat center center;
  }

/* deck controls for decks 1-4 and samplers */
#CurposButton12[displayValue="0"], #CurposButton34[displayValue="0"] {
  image: url(skin:/classic/buttons/btn__beat_curpos.svg) no-repeat center center;
  }
  #CurposButton12[value="1"] {
    image: url(skin:/classic/buttons/btn__beat_curpos_active_12.svg) no-repeat center center;
  }
  #CurposButton34[value="1"] {
    image: url(skin:/classic/buttons/btn__beat_curpos_active_34.svg) no-repeat center center;
  }

  #EjectButton12[displayValue="0"], #EjectButton34[displayValue="0"] {
    image: url(skin:/classic/buttons/btn__eject.svg) no-repeat center center;
    }
    #EjectButton12[value="1"] {
      image: url(skin:/classic/buttons/btn__eject_active_12.svg) no-repeat center center;
    }
    #EjectButton34[value="1"] {
      image: url(skin:/classic/buttons/btn__eject_active_34.svg) no-repeat center center;
    }

  #RepeatButton12[displayValue="0"], #RepeatButton34[displayValue="0"] {
    image: url(skin:/classic/buttons/btn__repeat.svg) no-repeat center center;
    }
    #RepeatButton12[displayValue="1"] {
      image: url(skin:/classic/buttons/btn__repeat_active_12.svg) no-repeat center center;
    }
    #RepeatButton34[displayValue="1"] {
      image: url(skin:/classic/buttons/btn__repeat_active_34.svg) no-repeat center center;
    }

  #QuantizeButton12[displayValue="0"], #QuantizeButton34[displayValue="0"] {
    image: url(skin:/classic/buttons/btn__quantize.svg) no-repeat center center;
    }
    #QuantizeButton12[displayValue="1"] {
      image: url(skin:/classic/buttons/btn__quantize_active_12.svg) no-repeat center center;
    }
    #QuantizeButton34[displayValue="1"] {
      image: url(skin:/classic/buttons/btn__quantize_active_34.svg) no-repeat center center;
    }

  #SlipmodeButton12[displayValue="0"], #SlipmodeButton34[displayValue="0"] {
    image: url(skin:/classic/buttons/btn__slip.svg) no-repeat center center;
    }
    #SlipmodeButton12[displayValue="1"] {
      image: url(skin:/classic/buttons/btn__slip_active_12.svg) no-repeat center center;
    }
    #SlipmodeButton34[displayValue="1"] {
      image: url(skin:/classic/buttons/btn__slip_active_34.svg) no-repeat center center;
    }

  #KeylockButton12[displayValue="0"], #KeylockButton34[displayValue="0"] {
    image: url(skin:/classic/buttons/btn__keylock.svg) no-repeat center center;
    }
    #KeylockButton12[displayValue="1"] {
      image: url(skin:/classic/buttons/btn__keylock_active_12.svg) no-repeat center center;
    }
    #KeylockButton34[displayValue="1"] {
      image: url(skin:/classic/buttons/btn__keylock_active_34.svg) no-repeat center center;
    }

#BeatgridControlsToggle[displayValue="0"] {
  image: url(skin:/classic/buttons/btn__beatgrid_controls_expand.svg) no-repeat center center;
  }
  #BeatgridControlsToggle[displayValue="1"] {
    image: url(skin:/classic/buttons/btn__beatgrid_controls_collapse.svg) no-repeat center center;
  }
  #BeatCurposLarge {
    image: url(skin:/classic/buttons/btn__beat_curpos_large.svg) no-repeat center center;
    }
    #BeatsEarlier {
      image: url(skin:/classic/buttons/btn__beats_earlier.svg) no-repeat center center;
    }
    #BeatsLater {
      image: url(skin:/classic/buttons/btn__beats_later.svg) no-repeat center center;
    }
    #BeatsSlower {
      image: url(skin:/classic/buttons/btn__beats_slower.svg) no-repeat center center;
    }
    #BeatsFaster {
      image: url(skin:/classic/buttons/btn__beats_faster.svg) no-repeat center center;
    }
    #HotcuesEarlier {
      image: url(skin:/classic/buttons/btn__beats_hotcues_earlier.svg) no-repeat center center;
    }
    #HotcuesLater {
      image: url(skin:/classic/buttons/btn__beats_hotcues_later.svg) no-repeat center center;
    }

#MicTalk {
  image: url(skin:/classic/buttons/btn__mic_talk.svg) no-repeat center center;
}

#AuxPlay {
  image: url(skin:/classic/buttons/btn__aux_play.svg) no-repeat center center;
}

#MicAuxAdd {
  image: url(skin:/classic/buttons/btn__plus_flat.svg) no-repeat center center;
}

#MicDucking[value="0"] {
  image: url(skin:/classic/buttons/btn__mic_duck_off.svg) no-repeat center center;
  }
  #MicDucking[value="1"] {
    image: url(skin:/classic/buttons/btn__mic_duck_auto.svg) no-repeat center center;
  }
  #MicDucking[value="2"] {
    image: url(skin:/classic/buttons/btn__mic_duck_manual.svg) no-repeat center center;
  }

#RecDot[highlight="0"] {
  image: url(skin:/classic/buttons/btn__rec_dot.svg) no-repeat center center;
  }
  #RecDot[highlight="1"],
  #RecDot[highlight="2"] {
    image: url(skin:/classic/buttons/btn__rec_dot_active.svg) no-repeat center center;
  }

#BroadcastButton[displayValue="0"] {
  /* for some reason the alignment isn't rescpected, so the icons
    have to be sized like available area (button size - margin) */
  image: url(skin:/classic/buttons/btn__broadcast_off.svg) no-repeat left top;
  }
  #BroadcastButton[displayValue="1"],
  #BroadcastButton[displayValue="2"],
  #BroadcastButton[displayValue="3"],
  #BroadcastButton[displayValue="4"] {
    image: url(skin:/classic/buttons/btn__broadcast_on.svg) no-repeat left top;
  }

#SkinSettingsToggle[displayValue="0"] {
  image: url(skin:/classic/buttons/btn__settings_off.svg) no-repeat left top;
  }
  #SkinSettingsToggle[displayValue="1"] {
    image: url(skin:/classic/buttons/btn__settings_on.svg) no-repeat left top;
  }

#ToolbarLogo {
  image: url(skin:/classic/style/mixxx_logo_small.svg) no-repeat center center;
}
#ToolbarSeparator {
  image: url(skin:/classic/style/toolbar_separator.svg) no-repeat center center;
  margin: 0px 3px;
}

WSearchLineEdit QToolButton:!focus {
  image: url(skin:/classic/buttons/btn__lib_clear_search.svg);
  }
  WSearchLineEdit QToolButton:focus {
    image: url(skin:/classic/buttons/btn__lib_clear_search_focus.svg);
  }

/* AutoDJ button icons */
QPushButton#pushButtonAutoDJ:!checked {
  image: url(skin:/classic/buttons/btn__autodj_enable_off.svg) no-repeat center center;
  }
  QPushButton#pushButtonAutoDJ:checked {
    image: url(skin:/classic/buttons/btn__autodj_enable_on.svg) no-repeat center center;
  }

QPushButton#pushButtonFadeNow:!enabled {
  image: url(skin:/classic/buttons/btn__autodj_fade_disabled.svg) no-repeat center center;
  }
  QPushButton#pushButtonFadeNow:enabled {
    image: url(skin:/classic/buttons/btn__autodj_fade.svg) no-repeat center center;
  }

QPushButton#pushButtonSkipNext:!enabled {
  image: url(skin:/classic/buttons/btn__autodj_skip_disabled.svg) no-repeat center center;
  }
  QPushButton#pushButtonSkipNext:enabled {
    image: url(skin:/classic/buttons/btn__autodj_skip.svg) no-repeat center center;
  }

QPushButton#pushButtonShuffle:enabled {
  image: url(skin:/classic/buttons/btn__autodj_shuffle.svg) no-repeat center center;
  }

QPushButton#pushButtonAddRandomTrack:enabled {
  image: url(skin:/classic/buttons/btn__autodj_addrandom.svg) no-repeat center center;
  }

QPushButton#pushButtonRepeatPlaylist:!checked {
  image: url(skin:/classic/buttons/btn__autodj_repeat_playlist_off.svg) no-repeat center center;
  }
  QPushButton#pushButtonRepeatPlaylist:checked {
    image: url(skin:/classic/buttons/btn__autodj_repeat_playlist_on.svg) no-repeat center center;
  }

/* widgets in cue popup menu */
#CueDeleteButton {  /*
  padding: 3px 6px; */
  qproperty-icon: url(skin:/classic/buttons/btn__delete.svg);
  /* color buttons are 42x24 px.
  To get the final size for the Delete button consider border width.
  It's a tall button, about the same height as cue number + label edit box */
  width: 24px;
  height: 42px;
  border-width: 2px;
  border-image: url(skin:/classic/buttons/btn_embedded_library.svg) 2 2 2 2;
  /* make the icon slightly larger than default 16px */
  qproperty-iconSize: 20px;
  /* has no effect
  padding: 0px; */
}

#CueLabelEdit {
  border: 1px solid #f0bb2b;
  border-radius: 0px;
  background-color: #000;
  selection-color: #000;
  selection-background-color: #ccc;
  padding: 2px;
}
/************** Button icons **************************************************/
/************** Button styles *************************************************/



/************** Library *******************************************************/

#LibraryContainer {
}

WLibrary,
#SidebarBox {
  padding: 2px 0px 0px 2px;
  border-bottom: 0px;
  border-left: 0px;
  border-right: 0px;
  border-bottom-right-radius: 0px;
  border-bottom-left-radius: 0px;
  border-top-left-radius: 0px;
}

WTrackTableView,
WLibraryTextBrowser,
WLibrarySidebar {
  border-top: 1px solid #0a0a0a;
  border-right: 1px solid qlineargradient(x1:0, y1:0, x2:0, y2:1,
    stop:0 #333,
    stop:1 #444);
  border-bottom: 1px solid #444;
  border-left: 1px solid #0a0a0a;
  background-color: #0f0f0f;
  alternate-background-color: #1a1a1a;
/* In selected library rows this sets the color of
  * shapes in star rating delegate
  * focus border of Cover Art and Color delegates
   > See src/library/coverartdelegate.cpp: "option.palette.highlightedText().color();" */
  selection-color: #fff;
  /* background of Color delegate in selected row */
  selection-background-color: #5e4507;
}
WTrackTableView:focus,
WLibrarySidebar:focus,
WLibraryTextBrowser:focus {
  border: 1px solid #d09300;
}

/* Selected rows in Tree and Tracks table */
WLibrarySidebar::item:selected,
WTrackTableView::item:selected,
#LibraryBPMButton::item:selected {
  color: #fff;
  background-color: #5e4507;
}

/* Use the native focus decoration */
/* This is for all cells including Played and Location */
WTrackTableView,
/* This is for the BPM cell */
WTrackTableView QCheckBox:focus {
  outline: 1px solid #fff;
}
/* This uses a custom qproperty to set the focus border
  for Color and Cover Art cells, 1px solid, sharp corners.
  See src/library/tableitemdelegate.cpp */
WTrackTableView {
  qproperty-focusBorderColor: #fff;
}

WLibrarySidebar {
  show-decoration-selected: 0;
}
WLibrarySidebar,
WLibrarySidebar::item:focus {
  outline: none;
}

/* Table cell in edit mode */
WLibrary QLineEdit,
#LibraryBPMSpinBox {
  color: #ddd;
  background-color: #0f0f0f;
  selection-color: #000;
  selection-background-color: #ccc;
  border: 1px solid #5E4507;
}

/* Entire BPM cell */
/* Lock icon at the left */
#LibraryBPMButton::indicator:checked {
  image: url(skin:/classic/buttons/btn__lib_bpm_locked_orange.svg);
}
#LibraryBPMButton::indicator:unchecked {
  image: url(skin:/classic/buttons/btn__lib_bpm_unlocked_grey.svg);
}
/* BPM value */
#LibraryBPMButton::item {
}
/* BPM spinbox in edit mode */
#LibraryBPMSpinBox {
  border-left: 0px;
  }
  /* When activated, the left border of the spinbox shows an
    artefact of the inactive BPM value. */
  #LibraryBPMSpinBox::up-button,
  #LibraryBPMSpinBox::down-button {
    margin-right: 3px;
    background-color: #382904;
    }
    #LibraryBPMSpinBox::up-button {
      image: url(skin:/classic/buttons/btn__lib_bpm_up.svg) no-repeat;
    }
    #LibraryBPMSpinBox::down-button {
      image: url(skin:/classic/buttons/btn__lib_bpm_down.svg) no-repeat;
    }

WCueMenuPopup QPushButton:focus {
  outline: none;
}

/* Button in library "Preview" column */
#LibraryPreviewButton {
  margin: 0px;
  padding: 0px;
  border-radius: 2px;
  border: 1px solid transparent;
  }
  #LibraryPreviewButton:!checked {
    image: url(skin:/classic/buttons/btn__lib_preview_play.svg);
    }
  #LibraryPreviewButton:checked {
    image: url(skin:/classic/buttons/btn__lib_preview_pause.svg);
    }


/*********** table header styles *********************************/

WTrackTableViewHeader {
  color: #bbb;
  border-bottom: 1px solid #000;
  }
  WTrackTableViewHeader,
  WTrackTableViewHeader::section,
  WTrackTableViewHeader::up-arrow,
  WTrackTableViewHeader::down-arrow {
    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1,
      stop:0 #222,
      stop:1 #111);
  }
  WTrackTableViewHeader::section {
    border-right: 1px solid #000;
    border-bottom: 1px solid #000;
  }
  WTrackTableViewHeader::up-arrow,
  WTrackTableViewHeader::down-arrow {
    border-right: 1px solid #000;
    /* gradient colors should match those of QHeaderView gradient,
      with a little transparency added to not cut off the header label */
    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1,
      stop:0 rgba(34,34,34,190),
      stop:1 rgba(17,17,17,190));
    }
    WTrackTableViewHeader::up-arrow {
      image: url(skin:/classic/buttons/btn__lib_sort_up.svg);
      }
    WTrackTableViewHeader::down-arrow {
      image: url(skin:/classic/buttons/btn__lib_sort_down.svg);
    }



/*********** scrollbars *********************************/
#LibraryContainer QScrollBar,
WEffectSelector QAbstractScrollArea QScrollBar {
  border: 0px solid #585858;
  background: #000;
  border-radius: 2px;
  padding: 1px;
  color: #999999;
  }
  #LibraryContainer QScrollBar:horizontal,
  WEffectSelector QAbstractScrollArea QScrollBar:horizontal {
    min-width: 12px;
    height: 15px;
    border-top-left-radius: 0px;
    border-top-right-radius: 0px;
    background-color: #000;
  }
  #LibraryContainer QScrollBar:vertical,
  WEffectSelector QAbstractScrollArea QScrollBar:vertical {
    min-height: 12px;
    width: 15px;
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
    color: #b3b3b3;
    background-color: #000;
  }
  /* catch scroll bar of focused treeview like this:
  WLibrarySidebar:focus QScrollBar:vertical {
  }*/
#LibraryContainer QScrollBar::handle:horizontal,
WEffectSelector QAbstractScrollArea QScrollBar::handle:horizontal {
  min-width: 25px;
  border-radius: 2px;
  background: qlineargradient(x1:0, y1:0, x2:0, y2:1,
    stop:0 #725309,
    stop:1 #412f05);
}
#LibraryContainer QScrollBar::handle:vertical,
WEffectSelector QAbstractScrollArea QScrollBar::handle:vertical {
  min-height: 25px;
  border-radius: 2px;
  background: qlineargradient(x1:0, y1:0, x2:0, y2:1,
    stop:0 #725309,
    stop:1 #412f05);
}

/* "add-page" and "sub-page" are the gutter of the scrollbar */
#LibraryContainer QScrollBar::add-page,
#LibraryContainer QScrollBar::sub-page,
WEffectSelector QAbstractScrollArea QScrollBar::add-page,
WEffectSelector QAbstractScrollArea QScrollBar::sub-page {
  min-width: 15px;
  min-height: 15px;
  background-color: #000;
  border-radius: 2px;
}
/* Turn off buttons */
#LibraryContainer QScrollBar::add-line,
#LibraryContainer QScrollBar::sub-line,
WEffectSelector QAbstractScrollArea QScrollBar::add-line,
WEffectSelector QAbstractScrollArea QScrollBar::sub-line{
  width: 0px;
  height: 0px;
  border: 0px;
}

/* Corner in between two scrollbars */
#LibraryContainer QAbstractScrollArea::corner,
WEffectSelector QAbstractScrollArea QScrollBar::corner {
  background-color: #1e1e1e;
}
/*********** scrollbars *********************************/


/*********** library search bar *********************************/
WSearchLineEdit {
  padding: 2px;
  background-color: #0f0f0f;
  selection-color: #000;
  selection-background-color: #ccc;
  }
  WSearchLineEdit:focus {
    padding: 1px;
    border: 2px solid #d08e00;
    border-radius: 0px;
  }
  WSearchLineEdit[active="false"],
  WSearchLineEdit:disabled {
    color: #999;
  }
  WSearchLineEdit:disabled {
    background-color: #191919;
  }
  /* Clear button: see /skins/default.qss */

/************ splitters ***********************/
/* HorizontalSplitter
  (the splitter itself is horizontal)
  Used to split
  - Waveforms & Decks/FX/etc
  - Library feature & Coverart */
#WaveformSplitter,
#SidebarCoverSplitter {
  padding: 0px;
  margin: 0px;
}

#WaveformSplitter::handle,
#SidebarCoverSplitter::handle {
    image: url(skin:/classic/style/splitter_handle_horizontal.png); /*
    border-top: 1px solid #000; */
  }
  #WaveformSplitter::handle:pressed,
  #WaveformSplitter::handle:hover,
  #SidebarCoverSplitter::handle:pressed,
  #SidebarCoverSplitter::handle:hover {
    image: url(skin:/classic/style/splitter_handle_horizontal_pressed.png);
  }
  #WaveformSplitter::handle:vertical,
  #SidebarCoverSplitter::handle:vertical {
  height: 9px;
}

/* LibrarySplitter
  (the splitter itself is vertical)
  Used to split Library sidebar & Tracks table */
#LibrarySplitter::handle {
  image: url(skin:/classic/style/splitter_handle_vertical.png);
  background-color: #1e1e1e;
}
#LibrarySplitter::handle:pressed,
#LibrarySplitter::handle:hover {
  image: url(skin:/classic/style/splitter_handle_vertical_pressed.png);
}
#LibrarySplitter::handle:vertical {
  /* 'height' works although it's actually the width of the handle */
  height: 6px;
}
/************ splitters ***********************/


/************ Library feature controls / tree view / table view *************/
WLibrary QRadioButton::indicator:checked {
  background: url(skin:/classic/buttons/btn__lib_radio_button_on_yellow.svg) center center;
}

WLibrary QRadioButton::indicator:unchecked {
  background: url(skin:/classic/buttons/btn__lib_radio_button_off.svg) center center;
}

/* triangle for closed/opened branches in treeview */
/* closed */
WLibrarySidebar::branch:closed:has-children:!has-siblings:!selected,
WLibrarySidebar::branch:closed:has-children:has-siblings:!selected {
/*  Suppresses that selected sidebar items branch indicator shows wrong color when out of focus ; lp:880588 */
  border-image: none;
  image: url(skin:/classic/style/library_branch_closed.svg);
  }
  /* closed, selected */
  WLibrarySidebar::branch:closed:has-children:!has-siblings:selected,
  WLibrarySidebar::branch:closed:has-children:has-siblings:selected {
    border-image: none;
    image: url(skin:/classic/style/library_branch_closed_selected.svg);
    background-color: #5e4507;
  }
/* open */
WLibrarySidebar::branch:open:has-children:!has-siblings,
WLibrarySidebar::branch:open:has-children:has-siblings {
  border-image: none;
  image: url(skin:/classic/style/library_branch_open.svg);
  }
  /* open, selected */
  WLibrarySidebar::branch:open:has-children:!has-siblings:selected,
  WLibrarySidebar::branch:open:has-children:has-siblings:selected {
    border-image: none;
    image: url(skin:/classic/style/library_branch_open_selected.svg);
    background-color: #5e4507;
    }
  /* space left of selected child item */
  WLibrarySidebar::branch:closed:!has-children:!has-siblings:selected,
  WLibrarySidebar::branch:closed:!has-children:has-siblings:selected,
  WLibrarySidebar::branch:open:!has-children:!has-siblings:selected,
  WLibrarySidebar::branch:open:!has-children:has-siblings:selected {
    border-image: none;
    background-color: #0f0f0f;
  }
/************** Library *******************************************************/



/************** common styles for WEffectSelector ******************************
*************** QSpinBox, QMenu, QToolTip *************************************/
QToolTip,
#MainMenu QMenu,
WLibrarySidebar QMenu,
WTrackTableViewHeader QMenu,
WLibraryTextBrowser QMenu,
WTrackMenu,
WTrackMenu QMenu,
QLineEdit QMenu,
WCueMenuPopup,
WCoverArtMenu,
WEffectSelector QAbstractScrollArea,
#fadeModeCombobox QAbstractScrollArea {
  border: 1px solid #888;
  border-radius: 2px;
}

#SkinContainer,
#CrossfaderButtonContainer_Deck,
#CrossfaderButtonContainer_Aux,
WPushButton#CrossfaderButton[value="0"],
QToolTip,
#MainMenu QMenu,
#MainMenu QMenu::item,
#MainMenu QMenu QCheckBox,
WLibrarySidebar QMenu,
WLibrarySidebar QMenu::item,
WTrackTableViewHeader QMenu,
WTrackTableViewHeader QMenu::item,
WLibraryTextBrowser QMenu,
WLibraryTextBrowser QMenu::item,
WTrackMenu,
WTrackMenu::item,
WTrackMenu QMenu,
WTrackMenu QMenu::item,
WTrackMenu QMenu QCheckBox,
QLineEdit QMenu,
QLineEdit QMenu::item,
WCoverArtMenu,
WCoverArtMenu::item,
WCueMenuPopup,
WCueMenuPopup QLabel,
WEffectSelector QAbstractScrollArea,
WEffectSelector::item,
#fadeModeCombobox QAbstractScrollArea,
#fadeModeCombobox::item {
  background-color: #0f0f0f;
}
WEffectSelector, #fadeModeCombobox {
  background-color: #161616;
}
/* hovered items */
#MainMenu::item:selected,
#MainMenu QMenu::item:selected,
#MainMenu QMenu::item:focus,
#MainMenu QMenu::item:hover,
#MainMenu QMenu::indicator:checked:selected,
/* ::indicator:!checked won't work. use 'unchecked' */
#MainMenu QMenu::indicator:unchecked:selected,
WLibrarySidebar QMenu::item:selected,
WTrackTableViewHeader QMenu::item:selected,
WTrackMenu::item:selected,
WTrackMenu QMenu::item:selected,
WTrackMenu QMenu QCheckBox:selected,
WTrackMenu QMenu QCheckBox:focus,
WTrackMenu QMenu QCheckBox:hover,
QLineEdit QMenu::item:selected,
WCoverArtMenu::item:selected,
#fadeModeCombobox::item:selected,
WEffectSelector::item:selected,
#SkinSettingsButton[hover="true"],
#SkinSettingsNumToggle[hover="true"],
#SkinSettingsNumToggleHeader[hover="true"],
#SkinSettingsMixerToggle[hover="true"],
#SkinSettingsLabelButton[hover="true"] {
  background-color: #5E4507;
  color: white;
  /* remove OS focus indicator */
  outline: none;
  }
  /* hover over checked effect */
  WEffectSelector::item:checked:selected,
  #fadeModeCombobox::item:checked:selected {
    background-color: #2a1e03;
    color: #fff;
    }
/* disabled menu items and checkboxes */
#MainMenu::item:disabled,
#MainMenu QMenu::item:disabled,
WLibrarySidebar QMenu::item:disabled,
WTrackMenu::item:disabled,
WTrackMenu QMenu::item:disabled,
WTrackMenu QMenu QCheckBox:disabled,
QLineEdit QMenu::item:disabled {
  color: #494949;
}

#MainMenu QMenu::indicator:checked,
#MainMenu QMenu::indicator:checked:selected {
  image: url(skin:/classic/buttons/btn__menu_checkbox_checked.svg);
  }
  #MainMenu QMenu::indicator:unchecked,
  #MainMenu QMenu::indicator:unchecked:selected {
    image: url(skin:/classic/buttons/btn__menu_checkbox.svg);
  }

  WLibrarySidebar QMenu::indicator:checked,
  WTrackTableViewHeader QMenu::indicator:checked,
  WTrackTableView::indicator:checked,
  WTrackMenu QMenu QCheckBox::indicator:checked,
  WEffectSelector::indicator:checked,
  #fadeModeCombobox::indicator:checked {
    image: url(skin:/classic/buttons/btn__lib_checkmark_orange.svg);
    }
  /* disabled menu item and checkbox */
  WTrackMenu QMenu QCheckBox::indicator:disabled:unchecked,
  WTrackMenu QMenu QCheckBox::indicator:disabled:checked,
  WTrackMenu QMenu QCheckBox::indicator:indeterminate {
    background-color: #222;
  }
  WTrackMenu QMenu QCheckBox::indicator:disabled:checked {
    image: url(skin:/classic/buttons/btn__lib_checkmark_grey.svg);
  }
  WTrackMenu QMenu QCheckBox::indicator:indeterminate {
    image: url(skin:/classic/buttons/btn__lib_checkmark_indeterminate_orange.svg);
  }
  WTrackMenu QMenu QCheckBox::indicator:disabled:indeterminate {
    image: url(skin:/classic/buttons/btn__lib_checkmark_indeterminate_grey.svg);
  }
  WTrackMenu QMenu QCheckBox::indicator:disabled:checked,
  WTrackMenu QMenu QCheckBox::indicator:disabled:unchecked {
    border: 1px solid #222;
  }

  #MainMenu QMenu::right-arrow,
  WTrackMenu::right-arrow,
  WTrackMenu QMenu::right-arrow {
    image: url(skin:/classic/style/menu_arrow_yellow.svg);
    }
  #MainMenu QMenu::right-arrow:selected,
  WTrackMenu::right-arrow:selected,
  WTrackMenu QMenu::right-arrow:selected {
    image: url(skin:/classic/style/menu_arrow_white.svg);
  }

/* This is the only way to select the 'Played' checkbox.
  Note that this also selects the BPM lock. */
WTrackTableView::indicator {
  /* border is added to size defined in style.qss */
  border: 1px solid transparent;
  margin: 0px;
  padding: 0px;
  }
  WTrackTableView::indicator:checked {
    border: 1px solid #ff6600;
    }
  WTrackTableView::indicator:unchecked {
    border: 1px solid rgba(151,151,151,128);
    }
  #MainMenu QMenu::separator,
  WLibrarySidebar QMenu::separator,
  WTrackTableViewHeader QMenu::separator,
  WTrackMenu::separator,
  WTrackMenu QMenu::separator,
  WLibraryTextBrowser QMenu::separator,
  QLineEdit QMenu::separator,
  #SkinSettingsSeparator {
    border-top: 1px solid #000;
    border-bottom: 1px solid #222;
    }

/* explicitly remove icons from unchecked items otherwise
  selected, unchecked items would have a checkmark */
WLibrarySidebar QMenu::indicator:unchecked,
WLibrarySidebar QMenu::indicator:unchecked:selected,
WTrackTableViewHeader QMenu::indicator:unchecked,
WTrackTableViewHeader QMenu::indicator:unchecked:selected,
WTrackTableView::indicator:unchecked,
WTrackTableView::indicator:unchecked:selected,
WEffectSelector::indicator:unchecked,
WEffectSelector::indicator:unchecked:selected,
#fadeModeCombobox::indicator:unchecked,
#fadeModeCombobox::indicator:unchecked:selected {
  image: none;
}
/************** common styles for WEffectSelector ******************************
*************** QSpinBox, QMenu, QToolTip *************************************/
