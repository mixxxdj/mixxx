  <!--
  LateNight, Resizable skin for Mixxx 2.1.x
  www.mixxx.org
  Copyright (C) 2010-2013 jus <s.brandt@mixxx.org>, 2014 Owen Williams <owilliams@mixxx.org>
  "LateNight" is licensed under the Creative Commons Attribution-ShareAlike 3.0 Unported license.
  http://creativecommons.org/licenses/by-sa/3.0/

  With every copy of the work, you are required to either provide a copy of the license it self
  or a link (URI). Failure to do this is a failure to complete the terms of the CC license.

  You are free:
  to Share - to copy, distribute and transmit the work
  to Remix - to adapt the work

  Under the following conditions:
  Attribution - You must attribute the work in the manner specified by the author or licensor
  (but not in any way that suggests that they endorse you or your use of the work).
  A attribution should include the following: The name of the author and/or licensor,
  the title of the work, the URL that is associated with the work.

  Share Alike - If you alter, transform, or build upon this work, you may distribute
  the resulting work only under the same or similar license to this one.

  TODO: Remove "persist" attributes throughout the skin and confirm that declaring
  them in the attributes section instead works.
  -->

<!DOCTYPE skin>
<skin>
  <manifest>
    <title>LateNight</title>
    <author>owilliams</author>
    <version>2.3.0.01</version>
    <description>A nighttime-compatible skin</description>
    <language>en</language>
    <license>Creative Commons Attribution, Share-Alike 3.0 Unported</license>
    <attributes>
      <!-- Set skin defaults. -->
      <attribute config_key="[Master],num_decks">4</attribute>
      <attribute config_key="[Master],num_samplers">8</attribute>
      <!-- Decks -->
      <attribute persist="true" config_key="[Skin],show_4decks">0</attribute>
      <attribute persist="true" config_key="[Skin],show_8_hotcues">0</attribute>
      <attribute persist="true" config_key="[Skin],show_intro_outro_cues">1</attribute>
      <attribute persist="true" config_key="[Skin],show_spinnies">1</attribute>
      <attribute persist="true" config_key="[Skin],show_coverart">1</attribute>
      <attribute persist="true" config_key="[Skin],show_big_spinny_coverart">0</attribute>
      <attribute persist="true" config_key="[Vinylcontrol],show_vinylcontrol">0</attribute>
      <attribute persist="true" config_key="[Skin],show_rate_controls">1</attribute>
      <attribute persist="true" config_key="[Skin],show_rate_control_buttons">1</attribute>
      <!-- Mixer -->
      <attribute persist="true" config_key="[Master],show_mixer">1</attribute>
      <attribute persist="true" config_key="[Skin],show_master_head_mixer">1</attribute>
      <attribute persist="true" config_key="[Skin],show_eq_knobs">1</attribute>
      <attribute persist="true" config_key="[Skin],show_eq_kill_buttons">1</attribute>
      <attribute persist="true" config_key="[Skin],show_xfader">1</attribute>
      <!-- Effects -->
      <attribute persist="true" config_key="[EffectRack1],show">1</attribute>
      <attribute persist="true" config_key="[Skin],show_4effectunits">0</attribute>
      <attribute persist="true" config_key="[Skin],show_superknobs">0</attribute>
      <!-- Samplers -->
      <attribute persist="true" config_key="[Samplers],show_samplers">1</attribute>
      <attribute persist="true" config_key="[Skin],8_samplers">1</attribute>
      <attribute persist="true" config_key="[Skin],expand_samplers">0</attribute>
      <!-- Library -->
      <attribute config_key="[Master],maximize_library">0</attribute>
      <attribute persist="true" config_key="[PreviewDeck],show_previewdeck">0</attribute>
      <attribute persist="true" config_key="[Library],show_coverart">1</attribute>

      <attribute persist="true" config_key="[Microphone],show_microphone">0</attribute>
      <attribute config_key="[Master],skin_settings">0</attribute>
      <!--Disable hidden effect routing Buttons-->
      <attribute persist="false" config_key="[EffectRack1_EffectUnit1],group_[MasterOutput]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit1],group_[BusLeft]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit1],group_[BusCenter]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit1],group_[BusRight]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit1],group_[BusTalkover]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit2],group_[MasterOutput]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit2],group_[BusLeft]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit2],group_[BusCenter]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit2],group_[BusRight]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit2],group_[BusTalkover]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit3],group_[MasterOutput]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit3],group_[BusLeft]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit3],group_[BusCenter]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit3],group_[BusRight]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit3],group_[BusTalkover]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit4],group_[MasterOutput]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit4],group_[BusLeft]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit4],group_[BusCenter]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit4],group_[BusRight]_enable">0</attribute>
      <attribute persist="false" config_key="[EffectRack1_EffectUnit4],group_[BusTalkover]_enable">0</attribute>
    </attributes>
  </manifest>
  <Schemes>
    <Scheme>
      <Name>Classic</Name>
      <!-- Optional: add stylesheet to complement and/or override the main
      'Mixxx' widget's stylesheet style.qss -->
      <!-- Mix any of the existing btn_, knob_, slider_ or style_ schemes.
            btn_scheme    all borders & icons for pushbuttons, spinboxes,
                          effect selector, AutoDJ fade mode selector
            knob_scheme   guess what
            slider_scheme ...exactly!
            style_scheme  icons & backgrounds for library, splitters, spinnies,
                          covers, vinyl control, toolbar
            bg_tile       allows to experiment with the background tile of recessed
                          areas without having to creat a new style_scheme folder
            Note:   button borders and icons are set in style_[SCHEME].qss, too
                    so do a mass-find-and-replace there, as well. -->
      <SetVariable name="btn_scheme">classic</SetVariable>
      <SetVariable name="knob_scheme">classic</SetVariable>
      <SetVariable name="slider_scheme">classic</SetVariable>
      <SetVariable name="style_scheme">classic</SetVariable>
      <!--  For no background tile leave empty.
            To override the <BackPath> tile it's sufficient [in most cases :]
            to assign the respective containers a background-color in qss.
            Good to know:
            <BackPath> suppresses qss borders -->
      <SetVariable name="bg_tile">classic</SetVariable>

      <!-- Set the '3D button mode'
          * elevated: buttons stand out, 3D border, drop shadow
          * embedded: buttons are kind of leveled with surface, surrounding groove -->
      <!-- Buttons in mixer, rate controls, collapsed Fx / Mic / Aux units etc. -->
      <SetVariable name="TopRegion_btn_type">embedded</SetVariable>
      <!-- Buttons in transport row, mic / aux units, sampler hotcue row etc. -->
      <SetVariable name="SubRegion_btn_type">elevated</SetVariable>

      <!--  Some widget sizes that are scheme specific -->
      <!--  Here, the goal was to avoid 'spinny eggs'.
            Just guarantee 1:1 x/y ratio for both spinny and cover art widgets in every situation.
            The small spinny containers in decks have a top border included to separate them from
            artist/title, therefore the containers are 1px taller than 1:1 -->
      <SetVariable name="SmallSpinnySize">55f,56f</SetVariable>
      <!--  Big spinnies are borderless = 1:1, borders are created by separator_*.xml
            Size spinnies so they force-expand the decks to match the mixer's max height
            in order to avoid the decks expand vertically when the mixer is shown
            (would screw up the layout).
            +1px margin-bottom -->
      <SetVariable name="BigSpinnySize">107f,108f</SetVariable>
      <!--  In small decks there's 2px margin-right before overview -->
      <SetVariable name="MiniDeckSpinnySize">48f,46f</SetVariable>

      <!-- Classic scheme uses black lines to separate certain areas; those are 1px wide/tall -->
      <SetVariable name="SeparatorSize">1f</SetVariable>

      <!-- Waveform & Overview colors -->
      <SetVariable name="SignalBgColor_12">#0f0f0f</SetVariable>
      <SetVariable name="SignalBgColor_34">#012322</SetVariable>
      <SetVariable name="SignalBgColor_SamplerPreview">#0f0f0f</SetVariable>
      <SetVariable name="SignalColor_12">#E7C413</SetVariable>
      <SetVariable name="SignalColor_34">#09B2AE</SetVariable>
      <SetVariable name="SignalRGBLowColor">#ff2a00</SetVariable>
      <SetVariable name="SignalRGBMidColor">#33f600</SetVariable>
      <SetVariable name="SignalRGBHighColor">#332acc</SetVariable>
      <SetVariable name="BeatColor">#ffffff</SetVariable>
      <SetVariable name="AxesColor">#ffffff</SetVariable>
      <SetVariable name="PlayPosColor">#00FF00</SetVariable>
      <SetVariable name="PlayedOverlayColor">#bb000000</SetVariable>
      <SetVariable name="EndOfTrackColor">#F856E7</SetVariable>

    </Scheme>

    <Scheme>
      <Name>Flip</Name>
      <Style src="skin:style_flip.qss"/>
      <!-- btn_theme actually only changes color of deck control icons: keylock, ... -->
      <SetVariable name="btn_scheme">flip</SetVariable>
      <SetVariable name="knob_scheme">classic</SetVariable>
      <SetVariable name="slider_scheme">flip</SetVariable>
      <SetVariable name="style_scheme">flip</SetVariable>
      <SetVariable name="TopRegion_btn_type">embedded</SetVariable>
      <SetVariable name="SubRegion_btn_type">embedded</SetVariable>

      <!-- Small spinnies in regular decks are square, no margin -->
      <SetVariable name="SmallSpinnySize">57f,57f</SetVariable>
      <!-- Big spinnies in decks are square (110 x 110px)
           + 1px border on all sides
           + 1px margin-right (overview)
           + 1px margin-bottom (transport row)
           If you want pixel-sharp indicators size for the big spinnies, size
              /style_[scheme]/spinny_indicator.svg according to effective size in
              skin at 100% and make sure the white indicator's width in px is an integer -->
      <SetVariable name="BigSpinnySize">116f,116f</SetVariable>
      <!-- In small decks there's a 2px margin before the overview -->
      <SetVariable name="MiniDeckSpinnySize">48f,46f</SetVariable>

      <SetVariable name="SeparatorSize">0f</SetVariable>

      <SetVariable name="SignalBgColor_12">#0f0f0e</SetVariable>
      <SetVariable name="SignalBgColor_34">#001b23</SetVariable>
      <SetVariable name="SignalBgColor_SamplerPreview">#080807</SetVariable>
      <SetVariable name="SignalColor_12">#e7c413</SetVariable>
      <SetVariable name="SignalColor_34">#0893b2</SetVariable>
      <SetVariable name="SignalRGBLowColor">#ff2a00</SetVariable>
      <SetVariable name="SignalRGBMidColor">#33f600</SetVariable>
      <SetVariable name="SignalRGBHighColor">#332acc</SetVariable>
      <SetVariable name="BeatColor">#ffffff</SetVariable>
      <SetVariable name="AxesColor">#ffffff</SetVariable>
      <SetVariable name="PlayPosColor">#00ff00</SetVariable>
      <SetVariable name="PlayedOverlayColor">#bb000000</SetVariable>
      <SetVariable name="EndOfTrackColor">#ff00ff</SetVariable>

    </Scheme>
  </Schemes>

  <ObjectName>Mixxx</ObjectName>
  <Style src="skin:style.qss" src-mac="skin:style-mac.qss"/>
  <!-- MinimumSize should not be an exact monitor resolution. There needs
  to be space for the title bar or other chrome at full screen.
  https://www.mixxx.org/wiki/doku.php/skin_guidelines#the_optimal_size_for_skins -->
  <MinimumSize>1270,550</MinimumSize>
  <SizePolicy>me,me</SizePolicy>
  <Layout>vertical</Layout>
  <LaunchImageStyle>
    LaunchImage {
      background-color: #0f0f0f;
    }
    QLabel {
      <!-- ToDo ronso0 :: Unfortunately, variables are not considered here. Yet ;)
      image: url(skin:/style_<Variable name="scheme"/>/mixxx_logo.svg); -->
      image: url(skin:/style_classic/mixxx_logo.svg);
      padding: 0;
      margin: 0px 2px 0px 2px;
      border: none;
      min-width: 160px;
      min-height: 40px;
      max-width: 160px;
      max-height: 40px;
    }
    QProgressBar {
      background: url(skin:/style_classic/progressbar_bg.svg);
      border: none;
      min-width: 164px;
      min-height: 5px;
      max-width: 164px;
      max-height: 5px;
    }
    QProgressBar::chunk {
      background: url(skin:/style_classic/progressbar.svg);
    }
  </LaunchImageStyle>

  <Children>
    <SetVariable name="BgTile">skin:/style_<Variable name="bg_tile"/>/background_tile.png</SetVariable>

    <SetVariable name="Align">center</SetVariable>
    
    <SetVariable name="PotiMinAngle">-135</SetVariable>
    <SetVariable name="PotiMaxAngle">135</SetVariable>
    <!-- Define singletons as early in the skin as possible.  Note that the
    library doesn't actually appear here, it's just instantiated and configured.
    -->

    <SingletonDefinition>
      <ObjectName>WaveformsSingleton</ObjectName>
      <Children>
        <Template src="skin:waveforms_container.xml"/>
      </Children>
    </SingletonDefinition>

    <SingletonDefinition>
      <ObjectName>SpinnyCoverart1</ObjectName>
      <Children>
        <Template src="skin:spinny_coverart.xml">
          <SetVariable name="channum">1</SetVariable>
        </Template>
      </Children>
    </SingletonDefinition>

    <SingletonDefinition>
      <ObjectName>SpinnyCoverart2</ObjectName>
      <Children>
        <Template src="skin:spinny_coverart.xml">
          <SetVariable name="channum">2</SetVariable>
        </Template>
      </Children>
    </SingletonDefinition>

    <SingletonDefinition>
      <ObjectName>SpinnyCoverart3</ObjectName>
      <Children>
        <Template src="skin:spinny_coverart.xml">
          <SetVariable name="channum">3</SetVariable>
        </Template>
      </Children>
    </SingletonDefinition>

    <SingletonDefinition>
      <ObjectName>SpinnyCoverart4</ObjectName>
      <Children>
        <Template src="skin:spinny_coverart.xml">
          <SetVariable name="channum">4</SetVariable>
        </Template>
      </Children>
    </SingletonDefinition>

    <SingletonDefinition>
      <ObjectName>DeckOverview1</ObjectName>
      <Children>
        <Template src="skin:deck_overview.xml">
          <SetVariable name="channum">1</SetVariable>
          <SetVariable name="SignalColor"><Variable name="SignalColor_12"/></SetVariable>
          <SetVariable name="SignalBgColor"><Variable name="SignalBgColor_12"/></SetVariable>
        </Template>
      </Children>
    </SingletonDefinition>

    <SingletonDefinition>
      <ObjectName>DeckOverview2</ObjectName>
      <Children>
        <Template src="skin:deck_overview.xml">
          <SetVariable name="channum">2</SetVariable>
          <SetVariable name="SignalColor"><Variable name="SignalColor_12"/></SetVariable>
          <SetVariable name="SignalBgColor"><Variable name="SignalBgColor_12"/></SetVariable>
        </Template>
      </Children>
    </SingletonDefinition>

    <SingletonDefinition>
      <ObjectName>DeckOverview3</ObjectName>
      <Children>
        <Template src="skin:deck_overview.xml">
          <SetVariable name="channum">3</SetVariable>
          <SetVariable name="SignalColor"><Variable name="SignalColor_34"/></SetVariable>
          <SetVariable name="SignalBgColor"><Variable name="SignalBgColor_34"/></SetVariable>
        </Template>
      </Children>
    </SingletonDefinition>

    <SingletonDefinition>
      <ObjectName>DeckOverview4</ObjectName>
      <Children>
        <Template src="skin:deck_overview.xml">
          <SetVariable name="channum">4</SetVariable>
          <SetVariable name="SignalColor"><Variable name="SignalColor_34"/></SetVariable>
          <SetVariable name="SignalBgColor"><Variable name="SignalBgColor_34"/></SetVariable>
        </Template>
      </Children>
    </SingletonDefinition>

    <SingletonDefinition>
      <ObjectName>LibrarySingleton</ObjectName>
      <Children>
        <Template src="skin:library.xml"/>
      </Children>
    </SingletonDefinition>

    <WidgetGroup>
      <ObjectName>SkinContainer</ObjectName>
      <Layout>vertical</Layout>
      <SizePolicy>me,me</SizePolicy>
      <Children>
        <!-- regular/maximized libary + skin settings menu -->
        <WidgetGroup>
          <Layout>horizontal</Layout>
          <SizePolicy>me,me</SizePolicy>
          <Children>

            <!-- regular or maximized library -->
            <WidgetStack currentpage="[Master],maximize_library">
              <Children>

                <!-- Waveforms, Decks, Effects... /  Library -->
                <Splitter>
                  <ObjectName>HorizontalSplitter</ObjectName>
                  <Orientation>vertical</Orientation>
                  <SizePolicy>me,min</SizePolicy>
                  <SplitSizesConfigKey>[Skin],stackedWaveforms_splitSize</SplitSizesConfigKey>
                  <Collapsible>1,0</Collapsible>
                  <Connection>
                    <ConfigKey>[Master],maximize_library</ConfigKey>
                    <Transform><Not/></Transform>
                    <BindProperty>visible</BindProperty>
                  </Connection>
                  <Children>

                    <SingletonContainer>
                      <ObjectName>WaveformsSingleton</ObjectName>
                    </SingletonContainer>

                    <WidgetGroup>
                      <Layout>vertical</Layout>
                      <SizePolicy>me,me</SizePolicy>
                      <Children>
                        <WidgetGroup>
                          <Layout>horizontal</Layout>
                          <SizePolicy>me,max</SizePolicy>
                          <Children>
                            <Template src="skin:decks_left.xml"/>
                            <Template src="skin:mixer.xml"/>
                            <Template src="skin:decks_right.xml"/>
                          </Children>
                        </WidgetGroup>
                        <Template src="skin:fx_rack.xml"/>
                        <Template src="skin:samplers_rack.xml"/>
                        <Template src="skin:mic_aux_rack.xml"/>
                        <SingletonContainer>
                          <ObjectName>LibrarySingleton</ObjectName>
                        </SingletonContainer>
                      </Children>
                    </WidgetGroup>

                  </Children>
                </Splitter><!-- Decks, Effects ... Library -->

                <!-- Maximized Library -->
                <WidgetGroup>
                  <Layout>vertical</Layout>
                  <SizePolicy>me,me</SizePolicy>
                  <Connection>
                    <ConfigKey>[Master],maximize_library</ConfigKey>
                    <BindProperty>visible</BindProperty>
                  </Connection>
                  <Children>
                    <Template src="skin:decks_mini.xml"/>
                    <SingletonContainer>
                      <ObjectName>LibrarySingleton</ObjectName>
                    </SingletonContainer>
                  </Children>
                </WidgetGroup><!-- Maximized Library -->

              </Children>
            </WidgetStack>
            <Template src="skin:skin_settings.xml"/>

          </Children>
        </WidgetGroup><!-- regular/maximized libary + skin settings menu -->

        <Template src="skin:toolbar.xml"/>
        <Template src="skin:screen_h-size_detection.xml"/>
      </Children>
    </WidgetGroup>
  </Children>
</skin>
