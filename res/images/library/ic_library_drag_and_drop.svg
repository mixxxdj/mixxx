#include <QDragEnterEvent>
#include <QDragMoveEvent>
#include <QDragLeaveEvent>
#include <QCursor>
#include <QMimeData>
#include <QDropEvent>
#include <QWidget>

class DeckWidget : public QWidget {
    Q_OBJECT

public:
    DeckWidget(QWidget *parent = nullptr) : QWidget(parent) {
        setAcceptDrops(true); // Enable drag and drop
    }

protected:
    void dragEnterEvent(QDragEnterEvent *event) override {
        // Only accept the event if the source is valid (e.g., file manager)
        if (event->mimeData()->hasUrls()) {
            event->acceptProposedAction();
            setCursor(Qt::CopyCursor);  // Set the drag cursor here
        }
    }

    void dragMoveEvent(QDragMoveEvent *event) override {
        if (event->mimeData()->hasUrls()) {
            event->accept();  // Continue the drag operation
            setCursor(Qt::CopyCursor);  // Ensure the drag cursor remains
        }
    }

    void dragLeaveEvent(QDragLeaveEvent *event) override {
        event->accept();  // Finish the drag operation
        unsetCursor();  // Restore the original cursor
    }

    void dropEvent(QDropEvent *event) override {
        // Handle the drop logic here (e.g., adding a track to the deck)
        if (event->mimeData()->hasUrls()) {
            event->acceptProposedAction();
            // Perform your drop handling here (like loading the file to the deck)
        }
    }
};
