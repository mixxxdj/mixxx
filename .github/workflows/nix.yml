name: "NixOS Builds"
on:
  pull_request:
  push:
jobs:
  dev:
    strategy:
      matrix:
        include:
          - name: nixos-20.09-gcc
            os: nixos-20.09
            use_clang: false
            use_clazy: false
            ccache: ccache-gcc
    name: "nix-shell ${{ matrix.name }}"
    runs-on: ubuntu-latest
    steps:
    - name: ccache cache files
      uses: actions/cache@v1.1.0
      with:
        path: .ccache
        key: ${{ matrix.os }}-${{ matrix.ccache }}-${{ github.head_ref }}-${{ github.run_number }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.ccache }}-${{ github.head_ref }}
          ${{ matrix.os }}-${{ matrix.ccache }}-
    - name: cache nix store
      uses: actions/cache@v1.1.0
      with:
        path: /nix/store
        key: ${{ matrix.os }}-nix-${{ github.head_ref }}-${{ github.run_number }}
        restore-keys: |
          ${{ matrix.os }}-nix-${{ github.head_ref }}
          ${{ matrix.os }}-nix-
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:${{ matrix.os }}
    - run: |
        nix-shell --arg enableKeyfinder true --arg useClang ${{ matrix.use_clang }} \
          --arg useClazy ${{ matrix.use_clazy }} --arg defaultLv2Plugins true \
          --command "configure && build && run-tests"
  pkg:
    strategy:
      matrix:
        include:
          - name: nixos-20.09
            os: nixos-20.09
    name: "nix-build"
    runs-on: ubuntu-latest
    steps:
    - name: cache nix store
      uses: actions/cache@v1.1.0
      with:
        path: /nix/store
        key: ${{ matrix.os }}-nix-${{ github.head_ref }}-${{ github.run_number }}
        restore-keys: |
          ${{ matrix.os }}-nix-${{ github.head_ref }}
          ${{ matrix.os }}-nix-
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:${{ matrix.os }}
    - run: |
        if [ -n "$CACHIX_SIGNING_KEY" ]; then
          nix-build shell.nix --arg releaseMode true --arg defaultLv2Plugins true | cachix push mixxx;
        else
          nix-build shell.nix --arg releaseMode true --arg defaultLv2Plugins true
        fi
